---
lang: pt
format:
  pdf:
    include-before-body:
      - file: pre_textuais.tex
    include-in-header:
      - text: |
          \usepackage{indentfirst}
          \usepackage{microtype}
          \usepackage{float}
          \usepackage{caption}
          \captionsetup[figure]{justification=raggedright, singlelinecheck=false}
          \usepackage{xcolor}
          \usepackage{tikz}
    documentclass: report
    papersize: a4
    geometry:
      - top = 3cm
      - bottom = 2cm
      - left = 3cm
      - right = 2cm
    fontsize: 12pt
    linestretch: 1.25
    indent: true
    toc: true
    toc-title: Sumário
    toc-depth: 3
    number-sections: true
    fig-cap-location: bottom
    fig-dpi: 300
    fig-pos: "H"
    fig-align: "center"
    tbl-cap-location: top
    tbl-pos: "H" 
    tbl-align: "center" 
    lof: true
    lot: true
    link-citations: true
    title-meta: "Relatório Integral de Autoavaliação do Mestrado Profissional em Admnistração do IFMG - Campus Formiga"
    author-meta: "Washington Santos da Silva"
    subject: "Autoavaliação"  
execute: 
  echo: false
  warning: false
  message: false
crossref:
  fig-prefix: 'Fig.'
  tbl-prefix: 'Tab.'
bibliography: referencias.bibtex
csl: associacao-brasileira-de-normas-tecnicas-ipea.csl
editor: source
---


```{r}
#| label: setup 
#| echo: false

# pacotes necessarios
library(here)       # para usar caminhos relativos 
library(tidyverse)  # para usar readr, dplyr, ggplot2...
library(scales)     # para anotações em gráficos
library(ggthemes)   # temas para ggplot2
library(kableExtra) # para criar tabelas
library(gt)

# importa os arquivos de dados

## discentes
path_discentes <- here::here("dados/limpos/dados_discentes.rds")
dados_discentes <- readr::read_rds(path_discentes)

## docentes
path_docentes <- here::here("dados/limpos/dados_docentes.rds")
dados_docentes <- readr::read_rds(path_docentes)

## producao intelectual dos concluintes
path_producao <- here::here("dados/limpos/producoes_concluintes.rds")
dados_producao <- readr::read_rds(path_producao)
```



# Introdução 

O Relatório Integral da Comissão de Autoavaliação do Programa de Pós-Graduação 
em Administração do IFMG - Campus Formiga, referente ao quadriênio 2021-2024, 
apresenta uma análise abrangente e reflexiva sobre o desempenho do programa 
sob a ótica dos diferentes segmentos acadêmicos. Este documento foi elaborado 
em conformidade com a Política de Autoavaliação, formalizada pela 
Portaria Nº 1706/IFMG/2024 [@portaria1706ifmg], que estabeleceu diretrizes 
para um processo avaliativo estruturado e permanente.

O mestrado iniciou suas atividades em 2021, em um contexto desafiador marcado 
pela pandemia da COVID-19. Desde o início, o programa demonstrou resiliência 
e compromisso com a construção de uma base sólida para a formação de 
pesquisadores qualificados em sua área de atuação. Além dos desafios impostos 
pela pandemia, o cenário da pós-graduação no Brasil tem sido impactado pela 
tendência de redução no interesse dos candidatos potenciais, conforme apontado 
por @castro2024 e @crise2024, devida a diversos possíveis fatores citados 
na @sec-ingressantes. Essa tendência refletiu-se no programa, com uma redução 
no número de ingressantes entre 2021 e 2022 e o não preenchimento do número 
de vagas ofertadas. Essa queda na demanda, associada a restrições de 
financiamento da pesquisa no país e mudanças rápidas e potencialmente 
disruptivas no mercado de trabalho — impulsionadas pelo avanço tecnológico, 
como o desenvolvimento da Inteligência Artificial e outras inovações digitais — 
impõe desafios adicionais para a sustentabilidade e consolidação dos programas 
de pós-graduação *stricto sensu*, sejam profissionais ou acadêmicos.

Diante desse cenário, a metodologia aplicada na autoavaliação foi planejada 
para fornecer informações amplas e adequadas a um programa recente, iniciado 
sob condições adversas, além de garantir uma representatividade apropriada 
das avaliações e percepções dos diferentes segmentos acadêmicos. Por meio 
de questionários estruturados com questões quantitativas e qualitativas, 
foram analisadas dimensões como qualidade geral do curso, corpo docente, 
infraestrutura, gestão administrativa, internacionalização, atividades 
extracurriculares e produção intelectual dos concluintes. A análise crítica 
dos dados coletados buscou não apenas identificar as principais demandas, 
mas também propor ações concretas e baseadas em evidências para o 
aprimoramento contínuo do programa.

Os resultados da autoavaliação ao longo do quadriênio destacaram aspectos 
positivos, como a qualificação e atuação do corpo docente, a adequação de 
diversos aspectos da matriz curricular, a infraestrutura disponível e a 
relevância da produção intelectual dos concluintes, que incluiu a criação 
de soluções técnicas inovadoras e a publicação de artigo em periódico de 
alto impacto. No entanto, também foram identificadas oportunidades de melhoria, 
como a revisão curricular, a ampliação de atividades extracurriculares, o 
fortalecimento da internacionalização e o aprimoramento da infraestrutura, 
incluindo a ampliação dos recursos disponíveis para o desenvolvimento 
das pesquisas. Essas demandas, identificadas por meio 
do processo de autoavaliação, visam fornecer subsídios para a evolução 
do curso, considerando o perfil dos discentes, que em sua maioria estão 
em uma fase profissional madura, com idade mediana de 35,5 anos e 
92% exercendo atividades remuneradas, conforme detalhado na @sec-perfil.

Além disso, o relatório busca consolidar a autoavaliação como uma ferramenta 
estratégica para o planejamento da evolução contínua do curso. Ao documentar 
as dimensões bem avaliadas e os desafios enfrentados, ele fornece subsídios 
para decisões futuras que visem à sustentabilidade e à evolução do programa 
diante do atual cenário desafiador. A implementação das ações propostas será 
monitorada pela Comissão de Autoavaliação em ciclos avaliativos subsequentes, 
de forma que o processo avaliativo contribua efetivamente para a consolidação 
e evolução do programa.

Este relatório está organizado em seções que descrevem as principais etapas 
do processo avaliativo: Planejamento da Autoavaliação (@sec-planejamento), 
Metodologia aplicada (@sec-metodologia), Resultados da Autoavaliação 
(@sec-resultados), Ações Executadas e Demandadas a partir da Autoavaliação 
(@sec-acoesdemanda), Meta-Avaliação (@sec-metaavaliacao) e as Considerações 
Finais (@sec-consideracoesfinais).




# Planejamento da Autoavaliação {#sec-planejamento}

O Programa de Pós-Graduação em Administração do IFMG - Campus Formiga 
iniciou suas atividades em 2021, em um contexto desafiador marcado pela 
pandemia da COVID-19. Desde sua concepção, o programa demonstrou um 
compromisso sólido com a melhoria contínua, o que resultou na criação de 
uma Política de Autoavaliação alinhada às diretrizes da CAPES e às 
necessidades específicas do programa. Essa política foi formalizada 
pela Portaria Nº 1706/IFMG, de 29 de novembro de 2024 [@portaria1706ifmg], 
após um processo estruturado de construção ao longo do quadriênio 2021-2024.

O planejamento da autoavaliação foi organizado em cinco etapas principais:

- **Definição de objetivos:** Estabelecimento de metas alinhadas à missão 
do programa e às expectativas dos seus públicos.

- **Benchmarking:** Pesquisa sobre políticas e instrumentos utilizados 
por programas de referência.

- **Desenvolvimento metodológico:** Criação de instrumentos avaliativos 
adequados ao contexto do programa.

- **Sensibilização:** Engajamento ativo dos diferentes segmentos 
acadêmicos no processo avaliativo.

- **Cronograma de Ações** Planejamento das ações avaliativas com 
prazos definidos para cada etapa, conforme os objetivos 
estratégicos e metas estabelecidos no planejamento estratégico 
do progrma.

O cronograma sintetizado na Tab. 2.1 apresenta as ações realizadas pela 
Comissão de Autovaliação durante o quadriênio, incluindo 
a construção da política, aplicação dos instrumentos avaliativos, 
análise dos resultados e a meta-avaliação final. Essas etapas 
foram fundamentais para estruturar um processo avaliativo robusto 
e promover uma cultura institucional voltada à reflexão crítica e 
ao aperfeiçoamento contínuo.

```{r}
#| tbl-cap: "Cronograma de Ações do Processo de Autoavaliação."

tabela_planejamento <- data.frame(
  Periodo = c(
    "2021/2022",
    "2021/2022",
    "2021/2022",
    "2021/2022",
    "2021/2022",
    "2023/2024",
    "2024",
    "2024/2025",
    "2025",
    "2025"
  ),
  Acao = c(
    "Pesquisas para a construção da política de autoavaliação",
    "Elaboração das primeiras versões da política de autoavaliação",
    "Pesquisas sobre instrumentos utilizados por cursos de referência",
    "Construção, revisão e aplicação das primeiras versões dos instrumentos de pesquisa",
    "Início do trabalho de sensibilização dos segmentos acadêmicos",
    "Aplicação dos instrumentos, organização e análise dos dados",
    "Formalização da política de autoavaliação do programa",
    "Compilação, organização, análise e construção do relatório integral com os resultados obtidos ao longo do quadriênio",
    "Reunião para discussão e feedback sobre o relatório integral de autoavaliação",
    "Meta-Avaliação"
  ),
  Responsavel = c(
    "CA",
    "CA",
    "CA",
    "CA",
    "CA",
    "CA",
    "CA",
    "CA",
    "CA",
    "CA"
  ),
  Objetivo = c(
    "Estabelecer benchmarks e definir diretrizes iniciais para a política de autoavaliação.",
    "Definir os objetivos e a estrutura da política de autoavaliação.",
    "Identificar boas práticas por meio de benchmarks para instrumentos avaliativos.",
    "Coletar dados iniciais que subsidiem a construção da política de autoavaliação.",
    "Engajar docentes, discentes e técnicos administrativos no processo avaliativo.",
    "Avaliar a qualidade do ensino, pesquisa e extensão, consolidando dados para melhorias.",
    "Consolidar formalmente a política de autoavaliação do programa.",
    "Documentar os resultados obtidos ao longo do quadriênio e propor recomendações.",
    "Discutir e coletar sugestões para o relatório integral e para a meta-avaliação.",
    "Refletir criticamente sobre o processo realizado no quadriênio, identificando melhorias."
  )
)

tabela_planejamento |>
  kbl(
    col.names = c(
      "\\textbf{Período}",
      "\\textbf{Ação}",
      "\\textbf{Responsável}",
      "\\textbf{Objetivo}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'l', 'c', 'l'),
    longtable = FALSE
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped", "repeat_header"),
    stripe_color = "gray!10",
    font_size = 10.5
  ) |>
  column_spec(2, width = "5cm") |>
  column_spec(4, width = "5cm") |>
  footnote(
    general = c(
      "Fonte: Comissão de Autovaliação.",
      "Nota: CA = Comissão de Autoavaliação."
    ),
    general_title = "",
    threeparttable = TRUE
  )
```




# Metodologia {#sec-metodologia}

A metodologia aplicada na autoavaliação do Mestrado Profissional em 
Administração do IFMG - Campus Formiga foi desenvolvida em conformidade 
com a Política de Autoavaliação do Programa, formalizada pela 
Portaria 1706/2024/IFMG [@portaria1706ifmg]. Esta seção descreve os 
procedimentos adotados para a coleta e análise dos dados, os instrumentos 
utilizados e as técnicas e procedimentos empregados no processo 
autoavaliativo.


## Metodologia Aplicada ao Processo de Autoavaliação

O objetivo principal foi promover uma reflexão crítica que orientasse 
ações para a melhoria contínua do programa. O processo metodológico 
seguiu quatro etapas:

1. **Planejamento**: Revisão das diretrizes normativas da CAPES e definição 
dos critérios avaliativos, abrangendo diversas dimensões. Além dos 
critérios de avaliação dessas dimensões, foram estabelecidos como indicadores 
quantitativos relevantes para a análise o número de ingressantes, as taxas 
de conclusão e a produção intelectual dos concluintes, conforme previsto 
na Política de Autoavaliação.

2. **Engajamento**: Promoção da participação ativa de discentes e 
docentes por meio de e-mails informativos e do site institucional.

3. **Execução**: Aplicação anual dos instrumentos avaliativos pela Comissão 
de Autoavaliação, composta por representantes dos segmentos acadêmicos do 
programa. Os dados quantitativos, como as taxas de conclusão, o número de 
ingressantes e a produção intelectual dos concluintes, foram coletados e 
analisados para fornecer uma visão geral do desempenho do programa em 
termos da demanda, taxa de sucesso da formação e impacto das pesquisas 
realizadas.

4. **Meta-avaliação**: Revisão crítica dos métodos aplicados para aprimorar 
continuamente o processo.

Os instrumentos utilizados incluíram questionários com questões 
quantitativas (escalas Likert) e qualitativas (respostas abertas), abordando 
dimensões como qualidade do ensino, infraestrutura, disciplinas, coordenação 
do curso e produção intelectual, entre outras. As questões com respostas 
abertas foram utilizadas para coletar possíveis sugestões em relação às 
dimensões avaliadas. A análise dos dados seguiu uma abordagem mista: os 
dados quantitativos foram analisados com técnicas estatísticas descritivas, 
notadamente frequências percentuais e diversos tipos de gráficos, enquanto 
os dados qualitativos foram examinados usando o método de categorização temática.

A estrutura dos questionários aplicados buscou um alinhamento com o 
estágio de maturidade do curso, o qual é recente, o que demandou uma 
análise abrangente. A alta quantidade de questões, distribuídas em diversas 
dimensões avaliativas, foi intencionalmente projetada para captar avaliações 
e percepções detalhadas, incluindo sugestões específicas dos diferentes 
segmentos acadêmicos. Essa abordagem é especialmente relevante para um 
programa recente, iniciado em 2021, que busca promover melhorias contínuas 
fundamentadas em evidências. Isto posto, a amplitude das questões evidencia 
o esforço efetivo do processo avaliativo para contribuir para a evolução 
do curso.

Os resultados obtidos produziram informativos parciais e este relatório 
integral que consolida os resultados obtidos no quadriênio. Esses resultados 
são divulgados aos segmentos acadêmicos, tanto pelo site institucional 
do Mestrado quanto por meio de e-mails informativos. Por fim, com a 
meta-avaliação, a Comissão de Autoavaliação revisou criticamente os 
instrumentos e métodos aplicados ao longo do ciclo avaliativo.


## Procedimento em Relação aos Resultados

Dada a alta quantidade de questões aplicadas nos questionários, 
abrangendo diversas dimensões avaliativas, a Comissão de Autoavaliação 
optou por consolidar os resultados e sugestões pertinentes entre as 
Ações Demandadas a partir do Processo de Autoavaliação apresentadas 
na @tbl-5.2 da @sec-acoesdemanda, Ações Executadas e Demandadas a Partir 
da Autoavaliação. Essa decisão foi tomada para evitar redundâncias no 
relatório e apresentar as análises de maneira objetiva e focada nas 
melhorias concretas propostas. No entanto, para proporcionar uma 
visão geral das informações extraídas dos dados coletados, foram 
incluídas subseções específicas contendo sínteses dos principais 
resultados obtidos junto ao corpo discente (@sec-sintesediscentes) 
e ao corpo docente (@sec-sintesedocentes).

Por fim, cabe ressaltar que todas as questões dos instrumentos aplicados 
aos discentes e docentes foram exibidas nas figuras apresentadas nas 
seções @sec-discentes e @sec-docentes. Assim, não se justificaria a 
inclusão destas questões em seção própria.




# Resultados da Autoavaliação {#sec-resultados}

Esta seção apresenta os resultados das pesquisas de autoavaliação 
conduzidas no Mestrado Profissional em Administração do IFMG - Campus Formiga, 
ao longo do quadriênio 2021 - 2023 e conforme estabelecido pela 
Portaria N. 1706/IFMG, de 29 de novembro de 2024 [@portaria1706ifmg]. 
Essa política estabelece o processo avaliativo como um instrumento 
crítico para a melhoria contínua do programa, em alinhamento com as 
diretrizes da CAPES e objetivos estratégicos do programa.

A pesquisa foi estruturada com base na aplicação de questionários 
direcionados aos discentes e docentes, abrangendo dimensões como 
qualidade do programa, infraestrutura, coordenação do curso, 
impacto da pandemia da COVID-19, entre outras. Os dados coletados 
foram analisados de maneira quantitativa e qualitativa, permitindo 
identificar pontos fortes, desafios e oportunidades de melhoria. Esta 
seção apresenta os principais resultados desse processo.



## Ingressantes e Taxas de Conclusão {#sec-ingressantes}

A Tab. 4.1 apresenta o número de ingressantes e as taxas de conclusão 
por turma/ano de ingresso observadas no Mestrado Profissional em 
Administração. Em 2021, ingressaram 11 alunos, com 
9 concluintes, resultando em uma taxa de conclusão de 82%. Já em 2022, 
ingressaram 7 alunos, com 4 concluintes, o que representa uma taxa de 
conclusão de 57%. Esses números refletem um cenário desafiador para 
a pós-graduação no Brasil, conforme apontado em @castro2024 e @crise2024.

A queda observada no número de ingressantes é compatível com a 
tendência nacional de redução no interesse por programas de pós-graduação. 
Conforme exposto em @castro2024, fatores como a desvalorização dos títulos 
acadêmicos no mercado de trabalho, a falta de incentivos financeiros e a 
percepção de que a pós-graduação nem sempre garante melhores oportunidades 
profissionais contribuem para esse cenário.  

Em suma, os dados mostram que os desafios enfrentados pela pós-graduação no 
país estão refletidos no número de ingressantes e, por consequência, nas 
taxas de conclusão do Mestrado Profissional em Administração do IFMG - Campus 
Formiga. Esses resultados reforçam a importância da autoavaliação contínua para a sustentabilidade do curso, permitindo que o programa identifique 
oportunidades de melhoria e busque se adaptar rapidamente às novas demandas 
do mercado e às expectativas dos discentes.


```{r}
#| tbl-cap: "Taxa de Conclusão por Turma/Ano de Ingresso."

dados_turmas <- tibble(
  Turma = c("2021", "2022"),
  Ingressantes = c(11, 7),
  Concluintes = c(9, 4),
  Taxa_Conclusao = c(82, 57)
)

dados_turmas |>
  mutate(Taxa_Conclusao = paste0(Taxa_Conclusao, "\\%")) |>
  kbl(
    col.names = c(
      "\\textbf{Turma}",
      "\\textbf{Ingressantes}",
      "\\textbf{Concluintes}",
      "\\textbf{Taxa de Conclusão}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'c', 'c', 'c')
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped"),
    stripe_color = "white!20"
  ) |>
  row_spec(1, background = "lightblue") |>
  footnote(
    general = "Fonte: Secretaria do Programa.",
    general_title = "",
    threeparttable = TRUE
  )
```



## Produção Intelectual dos Concluintes {#sec-producao}

A análise da produção intelectual dos concluintes do Mestrado 
Profissional em Administração do IFMG - Campus Formiga é realizada em 
conformidade com a Política de Autoavaliação do Programa, formalizada 
pela Portaria nº 1706/IFMG de 29 de novembro de 2024. Essa política 
estabelece a importância de monitorar e avaliar a produção técnica, 
bibliográfica e outras formas de disseminação do conhecimento gerado 
no curso, visando garantir a qualidade e a relevância do programa. 
Nesta seção, são apresentados os resultados das produções técnicas, 
bibliográficas e outras produções realizadas pelos concluintes durante 
o quadriênio 2021-2024, destacando os resultados alcançados e as 
oportunidades de aprimoramento do curso.



### Producão Técnica

As Figuras -@fig-prod.1 e -@fig-prod.2 apresentam a distribuição dos tipos 
de produção técnica realizados pelos concluintes que ingressaram no programa 
em 2021 e 2022, respectivamente. Essas produções refletem os objetivos 
estabelecidos pela Portaria CAPES nº 60/2019, que define como missão dos 
mestrados profissionais a capacitação de profissionais qualificados para 
práticas avançadas, inovadoras e transformadoras dos processos de trabalho, 
visando atender às demandas sociais, econômicas e organizacionais 
dos diversos setores da economia.

Para os ingressantes de 2021, observa-se que a maior parte das produções 
técnicas concentra-se em relatórios técnicos conclusivos (38,5%), 
seguidos por softwares/aplicativos (30,8%) e 
processos/tecnologias não patenteáveis (15,4%). Essa distribuição 
demonstra a aplicabilidade prática do conhecimento adquirido no curso, 
com destaque para a criação de ferramentas e soluções que podem ser 
diretamente implementadas no mercado, alinhando-se ao objetivo de 
transferir conhecimento para a sociedade de forma a atender às 
demandas sociais e econômicas, conforme previsto na Portaria CAPES.

Já para os ingressantes de 2022, os relatórios técnicos conclusivos 
representam 50% das produções técnicas, enquanto softwares/aplicativos 
e processos/tecnologias não patenteáveis correspondem a 25% cada. A 
predominância de relatórios técnicos sugere uma forte orientação para 
a resolução de problemas práticos e a entrega de resultados tangíveis, 
contribuindo para a agregação de conhecimentos que impulsionam o 
aumento da produtividade em empresas e organizações, conforme 
estabelecido pela Portaria CAPES.


```{r}
#| label: fig-prod.1
#| fig-cap: "Tipos de producão técnica dos concluintes que ingressaram em 2021."
#| fig-width: 8
#| fig-height: 5

# Filtrando as observações da turma de 2021 com tipo "técnica"
# E removendo as observações com subtipo_area "Apresentação de Trabalho"
producoes_tecnicas_2021 <- dados_producao %>%
  filter(turma == 2021, 
         tolower(tipo) == "técnica",
         subtipo_area != "Apresentação de Trabalho")

# Contando a frequência dos subtipos de produção técnica
subtipo_area_tab_2021 <- producoes_tecnicas_2021 %>%
  count(subtipo_area) %>%
  mutate(
    perc = n / sum(n),
    subtipo = fct_reorder(subtipo_area, n),  # Reordenando para o gráfico
    # Criando rótulo com percentual e contagem absoluta
    label = paste0(scales::percent(perc, accuracy = 0.1), " (", n, ")")
  )

# Criando o gráfico lollipop para os subtipos de produção técnica
ggplot(subtipo_area_tab_2021, aes(x = perc, y = subtipo)) +
  geom_segment(aes(
    x = 0,
    xend = perc,
    y = subtipo,
    yend = subtipo
  ), color = "#1E6F5C", linewidth = 2) +
  geom_point(color = "#1E6F5C", size = 5) +
  geom_text(
    aes(label = label),  # Usando o novo rótulo combinado
    vjust = -0.5,
    hjust = -0.2,
    size = 4.5,
    fontface = "bold"
  ) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.15)),
    limits = c(0, 0.6),
    labels = scales::label_percent()
  ) +
  scale_y_discrete(
    labels = function(x) stringr::str_wrap(x, width = 25)
  ) +
  labs(
    title = "Tipos de Produção Técnica - Ingressantes em 2021",
    subtitle = "Porcentagem e Total de Producões Técnicas por Tipo",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    y = NULL
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    axis.text.y = element_text(size = 11, face = "bold"),
    axis.text.x = element_text(size = 10),
    axis.line.y = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.y = element_line(color = "grey80", linewidth = 0.3),
    axis.line.x = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.x = element_line(color = "grey80", linewidth = 0.3),
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    )
  )
```



```{r}
#| label: fig-prod.2
#| fig-cap: "Tipos de producão técnica dos concluintes que ingressaram em 2022."
#| fig-width: 8
#| fig-height: 5

# Filtrando as observações da turma de 2022 com tipo "técnica"
# E removendo as observações com subtipo_area "Apresentação de Trabalho"
producoes_tecnicas_2022 <- dados_producao %>%
  filter(turma == 2022, 
         tolower(tipo) == "técnica",
         subtipo_area != "Apresentação de Trabalho")

# Contando a frequência dos subtipos de produção técnica
subtipo_area_tab_2022 <- producoes_tecnicas_2022 %>%
  count(subtipo_area) %>%
  mutate(
    perc = n / sum(n),
    subtipo = fct_reorder(subtipo_area, n),  # Reordenando para o gráfico
    # Criando rótulo com percentual e contagem absoluta
    label = paste0(scales::percent(perc, accuracy = 0.1), " (", n, ")")
  )

# Criando o gráfico lollipop para os subtipos de produção técnica
ggplot(subtipo_area_tab_2022, aes(x = perc, y = subtipo)) +
  geom_segment(aes(
    x = 0,
    xend = perc,
    y = subtipo,
    yend = subtipo
  ), color = "#1E6F5C", linewidth = 2) +
  geom_point(color = "#1E6F5C", size = 5) +
  geom_text(
    aes(label = label),  # Usando o novo rótulo combinado
    vjust = -0.5,
    hjust = -0.2,
    size = 4.5,
    fontface = "bold"
  ) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.15)),
    limits = c(0, 0.6),
    labels = scales::label_percent()
  ) +
  scale_y_discrete(
    labels = function(x) stringr::str_wrap(x, width = 25)
  ) +
  labs(
    title = "Tipos de Produção Técnica - Ingressantes em 2022",
    subtitle = "Porcentagem e Total de Producões Técnicas por Tipo",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    y = NULL
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5),
    axis.text.y = element_text(size = 11, face = "bold"),
    axis.text.x = element_text(size = 10),
    axis.line.y = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.y = element_line(color = "grey80", linewidth = 0.3),
    axis.line.x = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.x = element_line(color = "grey80", linewidth = 0.3),
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    )
  )
```


Entre os destaques da produção técnica do primeiro quadriênio do curso,
foi o desenvolvimento e registro de um software no 
Instituto Nacional da Propriedade Industrial (INPI) por um 
concluinte da turma de 2021, com formação em Contabilidade e Análise 
de Sistemas. O software, denominado *Sistema de Tributação Inteligente*, 
utiliza algoritmos de aprendizagem de máquina, um elemento fundamental 
dos sistemas baseados em Inteligência Artificial, e está sendo aplicado 
no escritório de contabilidade do próprio concluinte. Essa produção 
técnica exemplifica o alinhamento do programa com os processos e 
procedimentos de inovação, seja em atividades industriais geradoras 
de produtos ou na organização de serviços públicos ou privados, 
conforme previsto na Portaria CAPES.

Esses resultados indicam que o programa tem conseguido estimular a 
produção de soluções técnicas relevantes, embora haja espaço para 
diversificar ainda mais os tipos de produções, incentivando a criação 
de tecnologias patenteáveis e outras inovações de maior impacto. A 
continuidade desse processo de aprimoramento será fundamental para 
garantir que o programa continue a atender às demandas do mercado e 
da sociedade, contribuindo para o desenvolvimento regional.


### Producão Bibliográfica

A @fig-prod.3 apresenta a quantidade de artigos completos publicados em 
periódicos pelos concluintes que ingressaram em 2021 e 2022. Para os 
ingressantes de 2021, observa-se que 3 concluintes publicaram 
artigos como primeiros autores, enquanto 1 concluinte publicou 
como coautor, totalizando  4 artigos. Em relação aos 
ingressantes em 2022, 1 concluinte publicou 2 artigos como 
primeiro autor.

Um dos destaques da produção bibliográfica no quadriênio foi a 
publicação de um artigo na revista *Finance Research Letters*, de 
alto fator de impacto, por um concluinte da turma de 2022. O artigo 
aborda a otimização de carteiras de investimento utilizando algoritmos 
de aprendizagem de máquina, demonstrando a aplicação de técnicas 
avançadas de análise de dados na área financeira. Essa publicação 
reflete o alinhamento das pesquisas desenvolvidas no programa com as 
tendências contemporâneas do mercado financeiro e a capacidade dos 
egressos de contribuir para o avanço do conhecimento em sua área de atuação.



```{r}
#| label: fig-prod.3
#| fig-cap: "Artigos completos publicados em periódicos pelos ingressantes em 2021 e 2022."
#| fig-width: 8
#| fig-height: 5

# Filtrando apenas artigos completos publicados em periódicos
artigos_periodicos <- dados_producao %>%
  filter(subtipo_area == "Artigos Completos Publicados em Periódicos")

# Contando a frequência por turma
artigos_por_turma <- artigos_periodicos %>%
  count(turma) %>%
  mutate(
    turma = as.factor(turma),
    # Adicionando informações sobre os alunos (apenas o texto explicativo)
    info = case_when(
      turma == 2021 ~ "(publicados por 3 concluintes como primeiros autores\n e por 1 como coautor)",
      turma == 2022 ~ "(publicados por 1 concluinte como\n primeiro autor)",
      TRUE ~ ""
    )
  ) %>%
  # Ordenando em ordem decrescente pelo número de artigos
  arrange(desc(n))

# Reordenando o fator turma com base na contagem
artigos_por_turma$turma <- factor(artigos_por_turma$turma, 
                                 levels = artigos_por_turma$turma)

# Criando o gráfico lollipop
ggplot(artigos_por_turma, aes(x = n, y = turma)) +
  geom_segment(aes(
    x = 0,
    xend = n,
    y = turma,
    yend = turma
  ), color = "#1E6F5C", linewidth = 2) +
  geom_point(color = "#1E6F5C", size = 5) +
  # Número absoluto ACIMA do círculo
  geom_text(
    aes(label = n),
    hjust = -0.6,
    vjust = -0.8,  # Valor negativo para posicionar acima
    size = 4.5,
    fontface = "bold"
  ) +
  # Texto explicativo ABAIXO do círculo e mais à esquerda
  geom_text(
    aes(label = info),
    hjust = 0.5,     # Valor 1 para alinhar à direita (mais à esquerda do ponto)
    vjust = 2,     # Valor positivo para posicionar abaixo
    size = 3.5,
    color = "gray30",
    fontface = "italic"
  ) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.3)),
    limits = c(0, 4.5),
    breaks = 0:4
  ) +
  scale_y_discrete(limits = rev(levels(artigos_por_turma$turma))) +
  labs(
    title = "Artigos Completos Publicados em Periódicos - Ingressantes em 2021 e 2022",
    x = "Número de Artigos",
    y = NULL,
    caption = "Fonte: Comissão de Autoavaliação"
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 13, face = "bold", hjust = 0.5),
    axis.text.y = element_text(size = 12, face = "bold"),
    axis.text.x = element_text(size = 10),
    axis.line.y = element_line(color = "gray80", linewidth = 0.3),
    axis.ticks.y = element_line(color = "gray80", linewidth = 0.3),
    axis.line.x = element_line(color = "gray80", linewidth = 0.3),
    axis.ticks.x = element_line(color = "gray80", linewidth = 0.3),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    plot.margin = margin(t = 15, r = 25, b = 15, l = 15, unit = "pt")
  )
```


É importante destacar que o processo de publicação de artigos 
científicos, especialmente em periódicos de alto impacto, envolve 
um longo prazo médio de submissão, avaliação, retorno e revisão. 
Esse processo pode levar meses ou até anos, dependendo da revista e 
da área de pesquisa. No caso das revistas científicas nacionais 
da área de Administração, os prazos são frequentemente prolongados 
devido à alta demanda, entre outros fatores. Esse fator explica, 
em parte, o número ainda reduzido de artigos publicados em 
periódicos no quadriênio, uma vez que alguns concluintes ainda estão 
em alguma fase do processo de publicação. Esse cenário sugere que o 
número de publicações pode aumentar nos próximos anos, à medida que 
esses artigos forem aprovados e publicados.

Esses números demonstram que o programa tem incentivado a produção 
científica, o que contribui para a disseminação do conhecimento gerado 
no curso. No entanto, o número reduzido de publicações entre 2021 e 2022 
pode indicar a necessidade de aumentar os esforços e os recursos 
destinados à produção e publicação em periódicos, especialmente em 
periódicos de alto impacto. 


### Outras Produções - Publicações e Apresentações em Eventos

As Figuras -@fig-prod.4 e -@fig-prod.5 mostram a quantidade de trabalhos 
completos e resumos publicados em anais de eventos pelos concluintes que 
ingressaram em 2021 e 2022, respectivamente. Embora a CAPES não considere essas 
produções como indicadores quantitativos de produção intelectual, 
elas desempenham um papel fundamental na formação de pesquisadores e 
no desenvolvimento de artigos científicos. A participação em eventos 
científicos e profissionais permite aos discentes divulgar suas 
pesquisas, receber feedback da comunidade acadêmica e profissional, 
e aprimorar seus trabalhos antes de submetê-los a periódicos científicos. 
Além disso, essas atividades contribuem para a construção de redes 
de colaboração e para a disseminação do conhecimento gerado no programa.


```{r}
#| label: fig-prod.4
#| fig-cap: "Trabalhos completos e resumos publicados em anais de eventos pelos ingerssantes em 2021."
#| fig-width: 8
#| fig-height: 5

# Filtrar trabalhos e resumos publicados em anais de congressos para a turma de 2021
trabalhos_anais_2021 <- dados_producao %>%
  filter(subtipo_area %in% c("Resumos Publicados em Anais de Congressos", 
                             "Trabalhos Completos Publicados em Anais de Congressos"),
         turma == 2021) %>%
  count(subtipo_area) %>%
  mutate(
    perc = n / sum(n),
    subtipo_area = factor(subtipo_area, 
                        levels = c("Resumos Publicados em Anais de Congressos",
                                  "Trabalhos Completos Publicados em Anais de Congressos"))
  )

# Definir cores para os segmentos
cores <- c("#1E6F5C", "#1E6F5C")

# Criar gráfico lollipop para a turma de 2021
ggplot(trabalhos_anais_2021, aes(x = n, y = subtipo_area)) +
  geom_segment(aes(
    x = 0,
    xend = n,
    y = subtipo_area,
    yend = subtipo_area,
    color = subtipo_area
  ), linewidth = 2) +
  geom_point(aes(color = subtipo_area), size = 5) +
  geom_text(
    aes(label = n),
    vjust = -1,
    hjust = -0.2,
    size = 5,
    fontface = "bold"
  ) +
  scale_color_manual(values = cores) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.1)),
    limits = c(0, max(trabalhos_anais_2021$n) * 1.2),
    breaks = seq(0, ceiling(max(trabalhos_anais_2021$n)), by = 1)
  ) +
  scale_y_discrete(
    labels = function(x)
      str_wrap(x, width = 30)
  ) +
  labs(
    title = "Trabalhos Completos e Resumos Publicados em Anais de Eventos \n Ingressantes em 2021",
    caption = "Fonte: Comissão de Autoavaliação.",
    x = "Quantidade de publicações",
    y = NULL
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    plot.title = element_text(size = 14, face = "bold", hjust = 1),
    axis.text.y = element_text(size = 12, face = "bold"),
    axis.text.x = element_text(size = 10),
    axis.line.y = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.y = element_line(color = "grey80", linewidth = 0.3),
    axis.line.x = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.x = element_line(color = "grey80", linewidth = 0.3),
    axis.title.x = element_text(size = 11, face = "bold"),
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 9),
    plot.margin = margin(
      t = 10,
      r = 10,
      b = 10,
      l = 10,
      unit = "pt"
    )
  )
```


Durante o quadriênio 2021-2024, os concluintes do Mestrado Profissional 
em Administração do IFMG - Campus Formiga apresentaram e publicaram 
trabalhos em eventos de destaque nacional e internacional, 
demonstrando o engajamento do programa com a comunidade acadêmica 
e profissional. Entre os eventos mais relevantes, destacam-se:

- *XLVI EnANPAD 2022*: Um dos principais eventos da área de 
Administração no Brasil, que reúne pesquisadores, profissionais e 
estudantes para discutir temas relevantes e inovadores.
  
- *22º International Conference in Accounting (FEA/USP)*: Evento 
internacional que aborda temas avançados em contabilidade, proporcionando 
uma plataforma para a troca de conhecimentos entre pesquisadores de 
diferentes países.

- *XXV Semead*: Seminários em Administração, um dos eventos mais 
tradicionais da área, que promove a discussão de pesquisas aplicadas 
e teóricas.

- *XIV Congresso de Administração, Sociedade e Inovação (CASI)*: Evento 
focado na relação entre administração, inovação e desenvolvimento social.

- *XIX Congresso Virtual de Administração*: Evento que utiliza 
plataformas digitais para promover a interação e a divulgação de 
pesquisas em administração.

- *III Behavioral Science Lab Seminars*: Seminários que exploram temas 
relacionados às ciências comportamentais e sua aplicação na administração.

- *3º Congresso de Gestão de Riscos Corporativos 2023 (FEA/USP)*: Evento 
especializado em gestão de riscos, área de grande relevância para o setor 
financeiro e corporativo.

Essa participação em eventos de alto nível reflete o compromisso do 
programa com a formação de pesquisadores qualificados e com a disseminação 
do conhecimento gerado no curso. A apresentação de trabalhos em eventos 
científicos e profissionais permite aos discentes aprimorar suas 
habilidades de comunicação, receber críticas construtivas e estabelecer 
parcerias para futuras pesquisas. Além disso, essas atividades contribuem 
para a visibilidade do programa e para o reconhecimento da qualidade das 
pesquisas realizadas.

Embora essas produções não sejam contabilizadas como indicadores 
quantitativos pela CAPES, elas são essenciais para o processo de formação 
dos mestrandos e para a evolução dos artigos em desenvolvimento. A 
continuidade do incentivo à participação em eventos científicos e 
profissionais será fundamental para garantir que os discentes do 
programa continuem a se destacar na comunidade acadêmica e no mercado 
de trabalho.



```{r}
#| label: fig-prod.5
#| fig-cap: "Trabalhos completos publicados em anais de eventos pelos ingressantes em 2022."
#| fig-width: 8
#| fig-height: 5

# Filtrar trabalhos e resumos publicados em anais de congressos para a turma de 2022
trabalhos_anais_2022 <- dados_producao %>%
  filter(subtipo_area %in% c("Resumos Publicados em Anais de Congressos", 
                             "Trabalhos Completos Publicados em Anais de Congressos"),
         turma == 2022) %>%
  count(subtipo_area) %>%
  mutate(
    perc = n / sum(n),
    subtipo_area = factor(subtipo_area, 
                        levels = c("Resumos Publicados em Anais de Congressos",
                                  "Trabalhos Completos Publicados em Anais de Congressos"))
  )

# Definir cores para os segmentos
cores <- c("#1E6F5C", "#1E6F5C")

# Criar gráfico lollipop para a turma de 2022
ggplot(trabalhos_anais_2022, aes(x = n, y = subtipo_area)) +
  geom_segment(aes(
    x = 0,
    xend = n,
    y = subtipo_area,
    yend = subtipo_area,
    color = subtipo_area
  ), linewidth = 2) +
  geom_point(aes(color = subtipo_area), size = 5) +
  geom_text(
    aes(label = n),
    vjust = -1,
    hjust = -0.2,
    size = 5,
    fontface = "bold"
  ) +
  scale_color_manual(values = cores) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.1)),
    limits = c(0, max(trabalhos_anais_2022$n) * 1.2),
    breaks = seq(0, ceiling(max(trabalhos_anais_2022$n)), by = 1)
  ) +
  scale_y_discrete(
    labels = function(x)
      str_wrap(x, width = 30)
  ) +
  labs(
    title = "Trabalhos Completos Publicados em Anais de Eventos \n Ingressantes em 2022",
    caption = "Fonte: Comissão de Autoavaliação.",
    x = "Quantidade de publicações",
    y = NULL
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    plot.title = element_text(size = 14, face = "bold", hjust = 1),
    axis.text.y = element_text(size = 12, face = "bold"),
    axis.text.x = element_text(size = 10),
    axis.line.y = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.y = element_line(color = "grey80", linewidth = 0.3),
    axis.line.x = element_line(color = "grey80", linewidth = 0.3),
    axis.ticks.x = element_line(color = "grey80", linewidth = 0.3),
    axis.title.x = element_text(size = 11, face = "bold"),
    axis.title.y = element_blank(),
    plot.caption = element_text(size = 9),
    plot.margin = margin(
      t = 10,
      r = 10,
      b = 10,
      l = 10,
      unit = "pt"
    )
  )
```


Isto posto, a análise da produção intelectual dos concluintes do Mestrado 
Profissional em Administração do IFMG - Campus Formiga revela um cenário 
positivo, com destaque para a diversidade e aplicabilidade das produções 
técnicas e  da relevância de algumas produções bibliográficas. O 
desenvolvimento de soluções práticas, como o *Sistema de Tributação Inteligente*, 
e a publicação de artigos em periódicos de alto impacto, como a 
*Finance Research Letters*, demonstram o alinhamento do programa com 
os objetivos estabelecidos pela Portaria CAPES nº 60/2019. Essas 
produções refletem a capacidade do curso de formar profissionais 
qualificados para práticas avançadas, inovadoras e transformadoras, capazes 
de atender às demandas sociais, econômicas e organizacionais de diversos 
setores da economia.

No entanto, os dados também apontam para a necessidade de fortalecer as 
políticas de incentivo à pesquisa e à publicação, além de ampliar a 
participação dos discentes em eventos científicos e profissionais. Essas 
ações contribuirão para a consolidação do programa e para o aumento do 
impacto das pesquisas realizadas. Considera-se que o programa, iniciado 
em 2021 em um cenário desafiador, está no caminho certo para a evolução, 
e a continuidade desse processo de aprimoramento será fundamental para 
garantir sua relevância e excelência, em conformidade com os objetivos 
dos mestrados profissionais estabelecidos pela CAPES e considerando ainda
o cenário complexo da pós-graduação no país.



## Corpo Discente {#sec-discentes}

Nesta subseção, são apresentados os resultados da autoavaliação realizada 
junto ao corpo discente do Mestrado Profissional em Administração. 
Os questionários aplicados buscaram a avaliação de dimensões como:

- Qualidade geral do programa (@sec-avaprogdiscentes) e atuação da coordenação (@sec-avacoorddiscentes);

- Infraestrutura disponível (@sec-avainfradiscentes) e atendimento 
admnistrativo (@sec-avasecdiscentes);

- Disciplinas obrigatórias (@sec-avadobrigdiscentes) e optativas 
(@sec-avadoptdiscentes); 

- Autoavaliação em relação às disciplinas (@sec-autodiscdiscentes) e 
em relação à orientação (@sec-autoorientdiscentes);

- Atuação dos docentes (@sec-avadocentesdiscentes) e da orientação 
acadêmica (@sec-avaorientdiscentes).


Além disso, foi investigado o impacto da pandemia (@sec-pandemiadiscentes) 
da COVID-19 sobre os mestrandos que ingressaram no curso em 2021, 
ano de início da oferta do curso e um período crítico para todos. E, 
por fim, foram compiladas as sugestões de melhorias para diversas 
dimensões do programa relatadas pelos discentes (@sec-sugestdiscentes).

Os resultados apresentados buscam fornecer uma visão abrangente 
das percepções dos discentes sobre a qualidade do ensino, pesquisa 
e extensão oferecidos pelo programa. Indicadores como taxas de 
resposta e características demográficas dos participantes são 
destacados para reforçar a transparência e representatividade 
do processo avaliativo. Esses resultados são fundamentais para 
orientar ações que promovam o aprimoramento contínuo do curso.


### Síntese dos Principais Resultados {#sec-sintesediscentes}

Os resultados da autoavaliação do corpo discente indicaram altos níveis 
de satisfação em diversos aspectos envolvendo a qualidade do curso, 
a qualificação e atuação dos docentes, a coordenação do programa e o 
atendimento da Secretaria. O perfil dos participantes revela que a maioria 
dos mestrandos está em uma fase profissional madura, com idade média 
de 38 anos, e 92% exercem atividades profissionais remuneradas, o que 
reforça o caráter profissional do mestrado e a necessidade de alinhar 
o programa às demandas do mercado e sociais. As principais ocupações 
incluem Servidor Público, Professor e Contador, evidenciando a diversidade 
de atuações profissionais e a aplicabilidade dos conhecimentos em 
diferentes setores.

Além disso, foram identificadas oportunidades de implementação de melhorias 
em dimensões como infraestrutura, ampliação de atividades extracurriculares, 
internacionalização e aperfeiçoamento da comunicação institucional. As 
sugestões fornecidas pelos discentes indicam a necessidade de revisão 
das disciplinas obrigatórias e optativas, incluindo sua sequência, para 
aperfeiçoar seu alinhamento às linhas de pesquisa do mestrado e às demandas 
específicas dos discentes que desenvolvem projetos nas respectivas linhas. 
Por fim, é importante descatar que algumas demandas identificadas junto ao 
corpo discente ao longo do processo avaliativo que envolviam ajustes no 
currículo, resultaram em ações concretas, conforme pode ser verificado na 
@sec-executadas (Ações Executadas). 



### Taxas de Resposta {#sec-taxadiscentes}

As taxas de resposta dos discentes por ano ou turma de ingresso apresentam 
variações, conforme a Tab. 4.2. A turma de ingressantes de 2023 se destaca 
positivamente com uma taxa de resposta de 100%, evidenciando um engajamento 
pleno dos estudantes. Por outro lado, turmas como a de 2021 (22%) e 2024 
(43%) apresentaram níveis de participação abaixo do ideal, o que aponta para a 
necessidade de estratégias mais eficazes de sensibilização.

Importante destacar que os formulários aplicados aos mestrandos ficaram 
disponíveis por vários meses e que a Comissão de Autoavaliação enviou 
avisos e lembretes periodicamente sobre a importância da participação. 
Considerou-se relevante ainda que a turma de ingressantes em 2023 foi 
fortemente afetada pelos impactos negativos da pandemia da COVID-19.

Apesar dessas diferenças, a taxa geral de resposta no quadriênio (48%) é 
um indicador importante e relevante para o processo de autoavaliação. Os dados 
coletados permitem uma análise representativa das avaliações epercepções dos 
discentes, contribuindo para identificar pontos fortes e áreas que 
demandam melhorias no programa. A participação obtida, mesmo com 
algumas limitações, reforça o valor do envolvimento discente no 
fortalecimento da cultura avaliativa do programa.


```{r}
#| tbl-cap: "Taxas de Resposta dos Discentes por Ano/Turma de Ingresso e Total."

dados_taxa <- tibble(
  Turma = c("2021", "2022", "2023", "2024", "Total"),
  Respondentes = c(2, 2, 5, 3, 12),
  Total_Alunos = c(9, 4, 5, 7, 25),
  Taxa_Resposta = c(0.22, 0.50, 1.00, 0.43, 0.48)
)

dados_taxa |>
  mutate(Taxa_Resposta = paste0(round(Taxa_Resposta * 100, 0), "\\%")) |>
  kbl(
    col.names = c(
      "\\textbf{Ano de Ingresso}", 
      "\\textbf{Respondentes}", 
      "\\textbf{Total}", 
      "\\textbf{Taxa de Resposta}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'c', 'c', 'c')
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped"),
    stripe_color = "white!20"
  ) |>
  row_spec(5, background = "lightblue") |>
  footnote(
    general = "Fonte: Comissão de Autovaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```



### Perfil dos Participantes {#sec-perfil}

A Tab. 4.3 apresenta estatísticas das idades dos discentes participantes 
da pesquisa. A idade média dos respondentes é de 38 anos, com uma mediana de 
35,5 anos, indicando que a maioria dos mestrandos está em uma fase profissional 
relativamente madura, o que é coerente com o perfil de um mestrado profissional. 
A @fig-4.1 mostra que cerca 92% dos mestrandos exercem alguma atividade 
profissional remunerada, o que reforça o caráter profissional do mestrado 
e a necessidade de alinhar o programa às demandas do mercado e sociais. 

A @fig-4.2 exibe as atividades profissionais exercidas pelos discentes 
participantes, sendo que as principais ocupações incluem Servidor Público, 
Professor e Contador. A diversidade de atuações profissionais reflete a 
multidisciplinaridade do curso e a aplicabilidade dos conhecimentos 
em diferentes setores, alinhando-se aos objetivos do mestrado profissional, 
que visa capacitar profissionais para práticas avançadas e inovadoras em 
suas áreas de atuação.


```{r}
#| tbl-cap: "Estatísticas das idades (em anos) dos participantes da pesquisa."

# Criar tabela de estatísticas descritivas
dados_discentes %>%
  summarise(
    `Idade média` = mean(q3),
    `Idade mediana` = median(q3),
    `Idade mínima` = min(q3),
    `1º Quartil` = quantile(q3, 0.25),
    `3º Quartil` = quantile(q3, 0.75),
    `Idade máxima` = max(q3),
    `Desvio padrão` = sd(q3)
  ) %>%
  t() %>%
  as.data.frame() %>%
  kbl(
    col.names = c("\\textbf{Estatística}", "\\textbf{Estimativa}"),
    digits = 1,
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    linesep = "",
    align = c("l", "c")
  ) %>%
  kable_styling(
    latex_options = c("HOLD_position", "striped"),
    stripe_color = "white!20",
    full_width = FALSE,
    position = "center",
    bootstrap_options = "striped"
  ) %>%
  column_spec(1, width = "4cm") %>%
  column_spec(2, width = "3cm") %>%
  footnote(
    general = "Fonte: Comissão de Autovaliação.",
    general_title = "",
    footnote_as_chunk = TRUE,
    threeparttable = TRUE
  )
```



```{r}
#| label: fig-4.1
#| fig-cap: "Proporção de discentes que exercem atividade profissional remunerada."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência para atividade profissional
ativ_tab <- dados_discentes %>%
  count(q5) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q5, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q5)) +
  geom_rect(color = "white") +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você exerce alguma atividade profissional \n remunerada?",
    caption = "Fonte: Comissão de Autovaliação"
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```




```{r}
#| label: fig-4.2
#| fig-cap: "Atividades profissionais exercidas pelos discentes participantes."
#| fig-width: 8  # Reduzindo a largura do gráfico
#| fig-height: 5 # Reduzindo a altura do gráfico

# Pré-processamento dos dados
dados_discentes <- dados_discentes %>%
  mutate(q6 = factor(
    case_when(
      q6 == "Não tenho no momento." ~ NA_character_,
      q6 %in% c("Professor", "Professora universitária", "Instrutora de formação profissional") ~ "Professor(a)",
      q6 %in% c(
        "Funcionário Público - Agento de Correios",
        "Servidor Público",
        "Servidora Pública"
      ) ~ "Servidor(a) Público(a)",
      TRUE ~ as.character(q6)
    )
  ))

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  filter(!is.na(q6)) %>%
  count(q6, sort = TRUE) %>%
  mutate(q6 = fct_rev(fct_inorder(q6))) %>%
  mutate(perc = n / sum(n))

# Define cores manualmente para cada resposta
cores <- c(
  "Contador" = "#E69F00",
  "Professor(a)" = "#E69F00",
  "Servidor(a) Público(a)" = "#E69F00",
  "Gerente de Relacionamento" = "#999999",
  "Supervisor de Suprimentos" = "#999999",
  "Instrutora de formação profissional" = "#999999"
)

# Cria gráfico lollipop
ggplot(ativ_tab, aes(x = perc, y = q6)) +
  geom_segment(aes(
    x = 0,
    xend = perc,
    y = q6,
    yend = q6,
    color = q6
  ), linewidth = 1.2) +  # altera a espessura da linha
  geom_point(aes(color = q6), size = 5) +  # altera o tamanho dos pontos
  geom_text(
    aes(label = scales::percent(perc, accuracy = 0.1)),
    vjust = -1,  # ajusta a posição vertical do texto
    hjust = -0.2,
    size = 5,  # ajusta o tamanho da fonte do texto
    fontface = "bold"
  ) +
  scale_color_manual(values = cores) +
  scale_x_continuous(
    expand = expansion(mult = c(0, 0.1)),  # ajusta a expansão do eixo X
    limits = c(0, 0.8),
    labels = scales::label_percent()
  ) +
  labs(
    title = "Em caso de possuir atividade profissional, por favor especifique qual:",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    y = NULL
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    # Reduzindo o tamanho da fonte do título
    plot.title = element_text(size = 12, face = "bold", hjust = 0.8),  
    plot.subtitle = element_text(size = 8),
    # Reduzindo o tamanho da fonte do eixo Y
    axis.text.y = element_text(size = 11, face = "bold"),  
    # Reduzindo o tamanho da fonte do eixo X
    axis.text.x = element_text(size = 10),  
    # Reduzindo a espessura da linha do eixo Y
    axis.line.y = element_line(color = "grey80", linewidth = .3), 
    # Reduzindo a espessura dos ticks do eixo Y
    axis.ticks.y = element_line(color = "grey80", linewidth = .3),  
    # Reduzindo a espessura da linha do eixo X
    axis.line.x = element_line(color = "grey80", linewidth = .3),  
    # Reduzindo a espessura dos ticks do eixo X
    axis.ticks.x = element_line(color = "grey80", linewidth = .3),  
    axis.title.y = element_blank(),
    # Reduzindo o tamanho da fonte da legenda
    plot.caption = element_text(size = 9),  
    # Reduzindo as margens do gráfico
    plot.margin = margin(t = 10, r = 10, b = 10, l = 10, unit = "pt")  
  )
```



### Avaliação do Programa {#sec-avaprogdiscentes}


```{r}
#| label: fig-4.3
#| fig-cap: "Avaliação discente da interdisciplinaridade do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q7_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q7, incluindo níveis não utilizados
q7_summary <- dados_discentes %>%
  count(q7, sort = TRUE) %>%
  complete(q7 = q7_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q7 = factor(q7, levels = q7_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q7_summary_diverging <- q7_summary %>%
  mutate(percent_answers = if_else(
    q7 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q7_summary_diverging, aes(x = q7, y = percent_answers, fill = q7)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q7_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso utiliza ações de promoção da interdisciplinaridade?",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.4
#| fig-cap: "Avaliação discente da internacionalização do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q8_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q8, incluindo níveis não utilizados
q8_summary <- dados_discentes %>%
  count(q8, sort = TRUE) %>%
  complete(q8 = q8_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q8 = factor(q8, levels = q8_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q8_summary_diverging <- q8_summary %>%
  mutate(percent_answers = if_else(
    q8 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q8_summary_diverging, aes(x = q8, y = percent_answers, fill = q8)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q8_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso emprega ações de promoção da internacionalização?",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.5
#| fig-cap: "Avaliação discente das atividades de extensão."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q9_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q9, incluindo níveis não utilizados
q9_summary <- dados_discentes %>%
  count(q9, sort = TRUE) %>%
  complete(q9 = q9_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q9 = factor(q9, levels = q9_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q9_summary_diverging <- q9_summary %>%
  mutate(percent_answers = if_else(
    q9 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q9_summary_diverging, aes(x = q9, y = percent_answers, fill = q9)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q9_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades de extensão como cursos, projetos de \n extensão e outras ações e/ou integra-se à atividades extensionistas?",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.6
#| fig-cap: "Avaliação discente das atividades extraclasse."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q10_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q10, incluindo níveis não utilizados
q10_summary <- dados_discentes %>%
  count(q10, sort = TRUE) %>%
  complete(q10 = q10_levels, fill = list(n = 0)) %>%
  mutate(q10 = factor(q10, levels = q10_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q10_summary_diverging <- q10_summary %>%
  mutate(percent_answers = if_else(
    q10 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q10_summary_diverging, aes(x = q10, y = percent_answers, fill = q10)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q10_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades extraclasse como seminários, palestras,\ngrupos de estudos, dentre outros?",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.7
#| fig-cap: "Percepção discente sobre o ambiente criado pelo curso para seu crescimento intelectual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q11_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q11, incluindo níveis não utilizados
q11_summary <- dados_discentes %>%
  count(q11, sort = TRUE) %>%
  complete(q11 = q11_levels, fill = list(n = 0)) %>%
  mutate(q11 = factor(q11, levels = q11_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q11_summary_diverging <- q11_summary %>%
  mutate(percent_answers = if_else(
    q11 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q11_summary_diverging, aes(x = q11, y = percent_answers, fill = q11)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q11_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso proporciona um ambiente favorável ao seu crescimento \n intelectual?",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.8
#| fig-cap: "Avaliação discente da qualidade do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q12_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q12, incluindo níveis não utilizados
q12_summary <- dados_discentes %>%
  count(q12, sort = TRUE) %>%
  complete(q12 = q12_levels, fill = list(n = 0)) %>%
  mutate(q12 = factor(q12, levels = q12_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q12_summary_diverging <- q12_summary %>%
  mutate(percent_answers = if_else(
    q12 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q12_summary_diverging, aes(x = q12, y = percent_answers, fill = q12)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q12_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com a qualidade do curso?",
    caption = "Fonte: Comissão de Autovaliação",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.9
#| fig-cap: "Avaliação discente da qualificação dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q13_levels <- c(
  "Abaixo das minhas expectativas",
  "Um pouco abaixo das minhas expectativas",
  "De acordo com as minhas expectativas",
  "Um pouco acima das minhas expectativas",
  "Acima das minhas expectativas"
)

# Criar a tabela de frequência para a variável q13, incluindo níveis não utilizados
q13_summary <- dados_discentes %>%
  count(q13, sort = TRUE) %>%
  complete(q13 = q13_levels, fill = list(n = 0)) %>%
  mutate(q13 = factor(q13, levels = q13_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q13_summary_diverging <- q13_summary %>%
  mutate(percent_answers = if_else(
    q13 %in% c("Acima das minhas expectativas", "Um pouco acima das minhas expectativas"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q13_summary_diverging, aes(x = q13, y = percent_answers, fill = q13)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q13_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Abaixo das minhas expectativas" = "#EE6677",
      "Um pouco abaixo das minhas expectativas" = "#CCBB44",
      "De acordo com as minhas expectativas" = "grey80",
      "Um pouco acima das minhas expectativas" = "#66CCEE",
      "Acima das minhas expectativas" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia a qualificação dos docentes em relação às suas\nexpectativas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.10
#| fig-cap: "Avaliação discente da reputação do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q14_levels <- c(
  "Abaixo das minhas expectativas",
  "Um pouco abaixo das minhas expectativas",
  "De acordo com as minhas expectativas",
  "Um pouco acima das minhas expectativas",
  "Acima das minhas expectativas"
)

# Criar a tabela de frequência para a variável q14, incluindo níveis não utilizados
q14_summary <- dados_discentes %>%
  count(q14, sort = TRUE) %>%
  complete(q14 = q14_levels, fill = list(n = 0)) %>%
  mutate(q14 = factor(q14, levels = q14_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q14_summary_diverging <- q14_summary %>%
  mutate(percent_answers = if_else(
    q14 %in% c("Acima das minhas expectativas", "Um pouco acima das minhas expectativas"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q14_summary_diverging, aes(x = q14, y = percent_answers, fill = q14)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q14_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Abaixo das minhas expectativas" = "#EE6677",
      "Um pouco abaixo das minhas expectativas" = "#CCBB44",
      "De acordo com as minhas expectativas" = "grey80",
      "Um pouco acima das minhas expectativas" = "#66CCEE",
      "Acima das minhas expectativas" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia a reputação do curso no mercado e \n academia em relação às suas expectativas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.11
#| fig-cap: "Conhecimento dos objetivos do programa pelos discentes."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  count(q15) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q15, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q15)) +
  geom_rect(color = NA) + # Removida a cor da borda
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você conhece os objetivos do Programa?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.12
#| fig-cap: "Avaliação discente sobre o processo de distribuição de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  count(q16) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q16, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q16)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "O Programa tem clareza e transparência para \n distribuição das bolsas?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.13
#| fig-cap: "Avaliação discente dos critérios de manutenção de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_discentes %>%
  count(q17) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q17, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q17)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você considerea que os critérios de manutenção \n de bolsa durante o curso são claros?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



### Avaliação da Coordenação do Programa de Pós-Graduação  {#sec-avacoorddiscentes}

```{r}
#| label: fig-4.14
#| fig-cap: "Percepção discente sobre o compromisso da coordenação com a melhoria do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q19_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q19, incluindo níveis não utilizados
q19_summary <- dados_discentes %>%
  count(q19, sort = TRUE) %>%
  complete(q19 = q19_levels, fill = list(n = 0)) %>%
  mutate(q19 = factor(q19, levels = q19_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q19_summary_diverging <- q19_summary %>%
  mutate(percent_answers = if_else(
    q19 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q19_summary_diverging, aes(x = q19, y = percent_answers, fill = q19)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q19_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação demonstra compromisso com a melhoria do curso?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.15
#| fig-cap: "Avaliação discente da efetividade da coordenação no encaminhamento das solicitações ao colegiado."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q20_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q20, incluindo níveis não utilizados
q20_summary <- dados_discentes %>%
  count(q20, sort = TRUE) %>%
  complete(q20 = q20_levels, fill = list(n = 0)) %>%
  mutate(q20 = factor(q20, levels = q20_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q20_summary_diverging <- q20_summary %>%
  mutate(percent_answers = if_else(
    q20 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q20_summary_diverging, aes(x = q20, y = percent_answers, fill = q20)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q20_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação encaminha adequadamente as solicitações feitas ao\nColegiado?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.16
#| fig-cap: "Avaliação discente sobre a comunicação da coordenação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q21_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q21, incluindo níveis não utilizados
q21_summary <- dados_discentes %>%
  count(q21, sort = TRUE) %>%
  complete(q21 = q21_levels, fill = list(n = 0)) %>%
  mutate(q21 = factor(q21, levels = q21_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q21_summary_diverging <- q21_summary %>%
  mutate(percent_answers = if_else(
    q21 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q21_summary_diverging, aes(x = q21, y = percent_answers, fill = q21)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q21_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação envia avisos e comunicados de forma sistemática?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.17
#| fig-cap: "Avaliação discente sobre a disponibilidade da coordenação para o atendimento individual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q22_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q22, incluindo níveis não utilizados
q22_summary <- dados_discentes %>%
  count(q22, sort = TRUE) %>%
  complete(q22 = q22_levels, fill = list(n = 0)) %>%
  mutate(q22 = factor(q22, levels = q22_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q22_summary_diverging <- q22_summary %>%
  mutate(percent_answers = if_else(
    q22 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q22_summary_diverging, aes(x = q22, y = percent_answers, fill = q22)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q22_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação está disponível para atendimento individual aos discentes?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.18
#| fig-cap: "Percepção discente sobre o tratamento dado pela coordenação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q23_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q23, incluindo níveis não utilizados
q23_summary <- dados_discentes %>%
  count(q23, sort = TRUE) %>%
  complete(q23 = q23_levels, fill = list(n = 0)) %>%
  mutate(q23 = factor(q23, levels = q23_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q23_summary_diverging <- q23_summary %>%
  mutate(percent_answers = if_else(
    q23 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q23_summary_diverging, aes(x = q23, y = percent_answers, fill = q23)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q23_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação trata os discentes de forma respeitosa e igualitária?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.19
#| fig-cap: "Avaliação discente da consideracão de suas opiniões pela coordenação para a tomada de decisões."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q24_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q24, incluindo níveis não utilizados
q24_summary <- dados_discentes %>%
  count(q24, sort = TRUE) %>%
  complete(q24 = q24_levels, fill = list(n = 0)) %>%
  mutate(q24 = factor(q24, levels = q24_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q24_summary_diverging <- q24_summary %>%
  mutate(percent_answers = if_else(
    q24 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q24_summary_diverging, aes(x = q24, y = percent_answers, fill = q24)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q24_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação considera a opinião dos discentes nas decisões?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação da Infraestrutura  {#sec-avainfradiscentes}

```{r}
#| label: fig-4.20
#| fig-cap: "Avaliação discente sobre as salas disponíveis aos grupos pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q26_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q26, incluindo níveis não utilizados
q26_summary <- dados_discentes %>%
  count(q26, sort = TRUE) %>%
  complete(q26 = q26_levels, fill = list(n = 0)) %>%
  mutate(q26 = factor(q26, levels = q26_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q26_summary_diverging <- q26_summary %>%
  mutate(percent_answers = if_else(
    q26 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q26_summary_diverging, aes(x = q26, y = percent_answers, fill = q26)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q26_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas dos grupos de pesquisa\n(recursos de informática, mesas, impressoras, etc.)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.21
#| fig-cap: "Avaliação discente das instalações sanitárias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q27_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q27, incluindo níveis não utilizados
q27_summary <- dados_discentes %>%
  count(q27, sort = TRUE) %>%
  complete(q27 = q27_levels, fill = list(n = 0)) %>%
  mutate(q27 = factor(q27, levels = q27_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q27_summary_diverging <- q27_summary %>%
  mutate(percent_answers = if_else(
    q27 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q27_summary_diverging, aes(x = q27, y = percent_answers, fill = q27)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q27_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as instalações sanitárias?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.22
#| fig-cap: "Avaliação discente dos recursos audiovisuais."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q28_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q28, incluindo níveis não utilizados
q28_summary <- dados_discentes %>%
  count(q28, sort = TRUE) %>%
  complete(q28 = q28_levels, fill = list(n = 0)) %>%
  mutate(q28 = factor(q28, levels = q28_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q28_summary_diverging <- q28_summary %>%
  mutate(percent_answers = if_else(
    q28 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q28_summary_diverging, aes(x = q28, y = percent_answers, fill = q28)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q28_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com os recursos audiovisuais?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.23
#| fig-cap: "Avaliação discente das salas de aula."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q29_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q29, incluindo níveis não utilizados
q29_summary <- dados_discentes %>%
  count(q29, sort = TRUE) %>%
  complete(q29 = q29_levels, fill = list(n = 0)) %>%
  mutate(q29 = factor(q29, levels = q29_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q29_summary_diverging <- q29_summary %>%
  mutate(percent_answers = if_else(
    q29 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q29_summary_diverging, aes(x = q29, y = percent_answers, fill = q29)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q29_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas de aula?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.24
#| fig-cap: "Avaliação discente do anfiteatro para eventos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q30_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q30, incluindo níveis não utilizados
q30_summary <- dados_discentes %>%
  count(q30, sort = TRUE) %>%
  complete(q30 = q30_levels, fill = list(n = 0)) %>%
  mutate(q30 = factor(q30, levels = q30_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q30_summary_diverging <- q30_summary %>%
  mutate(percent_answers = if_else(
    q30 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q30_summary_diverging, aes(x = q30, y = percent_answers, fill = q30)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q30_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com o anfiteatro para eventos?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.25
#| fig-cap: "Avaliação discente do espaço de convivência."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q30_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q30, incluindo níveis não utilizados
q30_summary <- dados_discentes %>%
  count(q30, sort = TRUE) %>%
  complete(q30 = q30_levels, fill = list(n = 0)) %>%
  mutate(q30 = factor(q30, levels = q30_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q30_summary_diverging <- q30_summary %>%
  mutate(percent_answers = if_else(
    q30 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q30_summary_diverging, aes(x = q30, y = percent_answers, fill = q30)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q30_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com o espaço de convivência?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação do Atendimento da Secretaria do Programa  {#sec-avasecdiscentes}

```{r}
#| label: fig-4.26
#| fig-cap: "Percepção discente sobre o tratamento dado pela Secretaria do Progorama."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q33_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q33, incluindo níveis não utilizados
q33_summary <- dados_discentes %>%
  count(q33, sort = TRUE) %>%
  complete(q33 = q33_levels, fill = list(n = 0)) %>%
  mutate(q33 = factor(q33, levels = q33_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q33_summary_diverging <- q33_summary %>%
  mutate(percent_answers = if_else(
    q33 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q33_summary_diverging, aes(x = q33, y = percent_answers, fill = q33)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q33_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria trata os discentes de maneira respeitosa e igualitária?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.27
#| fig-cap: "Avaliação discente da agilidade da Secretaria para emitir documentos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q34_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q34, incluindo níveis não utilizados
q34_summary <- dados_discentes %>%
  count(q34, sort = TRUE) %>%
  complete(q34 = q34_levels, fill = list(n = 0)) %>%
  mutate(q34 = factor(q34, levels = q34_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q34_summary_diverging <- q34_summary %>%
  mutate(percent_answers = if_else(
    q34 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q34_summary_diverging, aes(x = q34, y = percent_answers, fill = q34)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q34_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria emite declarações/documentos em tempo hábil?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.28
#| fig-cap: "Avaliação discente do horário de funcionamento da Secretaria"
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q35_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q35, incluindo níveis não utilizados
q35_summary <- dados_discentes %>%
  count(q35, sort = TRUE) %>%
  complete(q35 = q35_levels, fill = list(n = 0)) %>%
  mutate(q35 = factor(q35, levels = q35_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q35_summary_diverging <- q35_summary %>%
  mutate(percent_answers = if_else(
    q35 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q35_summary_diverging, aes(x = q35, y = percent_answers, fill = q35)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q35_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O horário de funcionamento da Secretaria atende às minhas \n necessidades?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.29
#| fig-cap: "Avaliação discente da agilidade da Secretaria na resposta às demandas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q36_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q36, incluindo níveis não utilizados
q36_summary <- dados_discentes %>%
  count(q36, sort = TRUE) %>%
  complete(q36 = q36_levels, fill = list(n = 0)) %>%
  mutate(q36 = factor(q36, levels = q36_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q36_summary_diverging <- q36_summary %>%
  mutate(percent_answers = if_else(
    q36 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q36_summary_diverging, aes(x = q36, y = percent_answers, fill = q36)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q36_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria é ágil nas respostas às demandas encaminhadas pelos \n discentes?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação das Disciplinas Obrigatórias  {#sec-avadobrigdiscentes}

```{r}
#| label: fig-4.30
#| fig-cap: "Avaliação discente da contribuição das disciplinas obrigatórias para seu desenvolvimento intelectual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q38_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q38
q38_summary <- dados_discentes %>%
  count(q38, sort = TRUE) %>%
  complete(q38 = q38_levels, fill = list(n = 0)) %>%
  mutate(q38 = factor(q38, levels = q38_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q38_summary_diverging <- q38_summary %>%
  mutate(percent_answers = if_else(
    q38 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q38_summary_diverging, aes(x = q38, y = percent_answers, fill = q38)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q38_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contribuem para o meu desenvolvimento \n intelectual?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.31
#| fig-cap: "Avaliação discente da contribuição das disciplinas obrigatórias para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q39_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q39
q39_summary <- dados_discentes %>%
  count(q39, sort = TRUE) %>%
  complete(q39 = q39_levels, fill = list(n = 0)) %>%
  mutate(q39 = factor(q39, levels = q39_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q39_summary_diverging <- q39_summary %>%
  mutate(percent_answers = if_else(
    q39 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q39_summary_diverging, aes(x = q39, y = percent_answers, fill = q39)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q39_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contribuem para apreensão de novos \n conhecimentos e desenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.32
#| fig-cap: "Avaliação discente da coerência das disciplinas obrigatórias com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q40_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q40
q40_summary <- dados_discentes %>%
  count(q40, sort = TRUE) %>%
  complete(q40 = q40_levels, fill = list(n = 0)) %>%
  mutate(q40 = factor(q40, levels = q40_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q40_summary_diverging <- q40_summary %>%
  mutate(percent_answers = if_else(
    q40 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q40_summary_diverging, aes(x = q40, y = percent_answers, fill = q40)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q40_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias são coerentes com as linhas de pesquisa do \n Programa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.33
#| fig-cap: "Avaliação discente da atualidade da bibliografia das disciplinas obrigatórias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q41_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q41
q41_summary <- dados_discentes %>%
  count(q41, sort = TRUE) %>%
  complete(q41 = q41_levels, fill = list(n = 0)) %>%
  mutate(q41 = factor(q41, levels = q41_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q41_summary_diverging <- q41_summary %>%
  mutate(percent_answers = if_else(
    q41 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q41_summary_diverging, aes(x = q41, y = percent_answers, fill = q41)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q41_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contam com bibliografia atualizada?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.34
#| fig-cap: "Expectativas dos discentes em relação às disciplinas obrigatórias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q42_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q42
q42_summary <- dados_discentes %>%
  count(q42, sort = TRUE) %>%
  complete(q42 = q42_levels, fill = list(n = 0)) %>%
  mutate(q42 = factor(q42, levels = q42_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q42_summary_diverging <- q42_summary %>%
  mutate(percent_answers = if_else(
    q42 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q42_summary_diverging, aes(x = q42, y = percent_answers, fill = q42)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q42_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias correspondem às minhas expectativas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```




### Avaliação das Disciplinas Optativas  {#sec-avadoptdiscentes}

```{r}
#| label: fig-4.35
#| fig-cap: "Avaliação discente da contribuição das disciplinas optativas para seu desenvolvimento intelectual."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q44_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q44
q44_summary <- dados_discentes %>%
  count(q44, sort = TRUE) %>%
  complete(q44 = q44_levels, fill = list(n = 0)) %>%
  mutate(q44 = factor(q44, levels = q44_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q44_summary_diverging <- q44_summary %>%
  mutate(percent_answers = if_else(
    q44 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q44_summary_diverging, aes(x = q44, y = percent_answers, fill = q44)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q44_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contribuem para o meu desenvolvimento \n intelectual?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.36
#| fig-cap: "Avaliação discente da contribuição das disciplinas optativas para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q45_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q45
q45_summary <- dados_discentes %>%
  count(q45, sort = TRUE) %>%
  complete(q45 = q45_levels, fill = list(n = 0)) %>%
  mutate(q45 = factor(q45, levels = q45_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q45_summary_diverging <- q45_summary %>%
  mutate(percent_answers = if_else(
    q45 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q45_summary_diverging, aes(x = q45, y = percent_answers, fill = q45)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q45_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contribuem para apreensão de novos \n conhecimentos e desenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.37
#| fig-cap: "Avaliação discente da coerência das disciplinas optativas com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q46_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q46
q46_summary <- dados_discentes %>%
  count(q46, sort = TRUE) %>%
  complete(q46 = q46_levels, fill = list(n = 0)) %>%
  mutate(q46 = factor(q46, levels = q46_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q46_summary_diverging <- q46_summary %>%
  mutate(percent_answers = if_else(
    q46 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q46_summary_diverging, aes(x = q46, y = percent_answers, fill = q46)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q46_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas são coerentes com as linhas de pesquisa do \n Programa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.38
#| fig-cap: "Avaliação discente da atualidade da bibliografia das disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q47_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q47
q47_summary <- dados_discentes %>%
  count(q47, sort = TRUE) %>%
  complete(q47 = q47_levels, fill = list(n = 0)) %>%
  mutate(q47 = factor(q47, levels = q47_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q47_summary_diverging <- q47_summary %>%
  mutate(percent_answers = if_else(
    q47 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q47_summary_diverging, aes(x = q47, y = percent_answers, fill = q47)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q47_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contam com bibliografia atualizada?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.39
#| fig-cap: "Avaliação discente da diversidade dos temas abordados pelas disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q48_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q48
q48_summary <- dados_discentes %>%
  count(q48, sort = TRUE) %>%
  complete(q48 = q48_levels, fill = list(n = 0)) %>%
  mutate(q48 = factor(q48, levels = q48_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q48_summary_diverging <- q48_summary %>%
  mutate(percent_answers = if_else(
    q48 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q48_summary_diverging, aes(x = q48, y = percent_answers, fill = q48)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q48_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contemplam temas variados?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.40
#| fig-cap: "Avaliação discente das suas expectativas em relação às disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q49_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q49
q49_summary <- dados_discentes %>%
  count(q49, sort = TRUE) %>%
  complete(q49 = q49_levels, fill = list(n = 0)) %>%
  mutate(q49 = factor(q49, levels = q49_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q49_summary_diverging <- q49_summary %>%
  mutate(percent_answers = if_else(
    q49 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q49_summary_diverging, aes(x = q49, y = percent_answers, fill = q49)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q49_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15, unit = "pt"),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas correspondem às minhas expectativas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Autoavaliação em Relação às Disciplinas  {#sec-autodiscdiscentes}

```{r}
#| label: fig-4.41
#| fig-cap: "Autoavaliação discente sobre o aprendizado do conteúdo das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q51_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q51, incluindo níveis não utilizados
q51_summary <- dados_discentes %>%
  count(q51, sort = TRUE) %>%
  complete(q51 = q51_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q51 = factor(q51, levels = q51_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q51_summary_diverging <- q51_summary %>%
  mutate(percent_answers = if_else(
    q51 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q51_summary_diverging, aes(x = q51, y = percent_answers, fill = q51)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q51_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Apreendi os conteúdos abordados nas disciplinas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.42
#| fig-cap: "Autoavaliação discente da leitura das bibliografias das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q52_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q52, incluindo níveis não utilizados
q52_summary <- dados_discentes %>%
  count(q52, sort = TRUE) %>%
  complete(q52 = q52_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q52 = factor(q52, levels = q52_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q52_summary_diverging <- q52_summary %>%
  mutate(percent_answers = if_else(
    q52 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q52_summary_diverging, aes(x = q52, y = percent_answers, fill = q52)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q52_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Realizei a leitura das bibliografias utilizadas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.43
#| fig-cap: "Autoavaliação discente da dedicação aos estudos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q53_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q53, incluindo níveis não utilizados
q53_summary <- dados_discentes %>%
  count(q53, sort = TRUE) %>%
  complete(q53 = q53_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q53 = factor(q53, levels = q53_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q53_summary_diverging <- q53_summary %>%
  mutate(percent_answers = if_else(
    q53 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q53_summary_diverging, aes(x = q53, y = percent_answers, fill = q53)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q53_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Dediquei-me aos estudos fora da sala de aula?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.44
#| fig-cap: "Autoavaliação discente da frequência às aulas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q54_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q54, incluindo níveis não utilizados
q54_summary <- dados_discentes %>%
  count(q54, sort = TRUE) %>%
  complete(q54 = q54_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q54 = factor(q54, levels = q54_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q54_summary_diverging <- q54_summary %>%
  mutate(percent_answers = if_else(
    q54 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q54_summary_diverging, aes(x = q54, y = percent_answers, fill = q54)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q54_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Fui frequente às aulas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.45
#| fig-cap: "Autoavaliação discente da participação nas atividades e discussões dentro e fora da sala de aula."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q55_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q55, incluindo níveis não utilizados
q55_summary <- dados_discentes %>%
  count(q55, sort = TRUE) %>%
  complete(q55 = q55_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q55 = factor(q55, levels = q55_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q55_summary_diverging <- q55_summary %>%
  mutate(percent_answers = if_else(
    q55 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q55_summary_diverging, aes(x = q55, y = percent_answers, fill = q55)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q55_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Participei das atividades e discussões desenvolvidas em sala de aula \n e fora dela?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.46
#| fig-cap: "Autoavaliação discente da postura com os colegas e docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q55_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q55, incluindo níveis não utilizados
q55_summary <- dados_discentes %>%
  count(q55, sort = TRUE) %>%
  complete(q55 = q55_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q55 = factor(q55, levels = q55_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q55_summary_diverging <- q55_summary %>%
  mutate(percent_answers = if_else(
    q55 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q55_summary_diverging, aes(x = q55, y = percent_answers, fill = q55)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q55_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Fui respeitoso com o(a) professor(a) e com os colegas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação dos Docentes do Programa  {#sec-avadocentesdiscentes}

```{r}
#| label: fig-4.47
#| fig-cap: "Avaliação discente da atualidade do conhecimento e domínido de conteúdo dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q57_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q57, incluindo níveis não utilizados
q57_summary <- dados_discentes %>%
  count(q57, sort = TRUE) %>%
  complete(q57 = q57_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q57 = factor(q57, levels = q57_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q57_summary_diverging <- q57_summary %>%
  mutate(percent_answers = if_else(
    q57 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q57_summary_diverging, aes(x = q57, y = percent_answers, fill = q57)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q57_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores demonstram conhecimento atualizado e domínio do \n conteúdo?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.48
#| fig-cap: "Avaliação discente da apresentação do plano de ensino pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q58_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q58, incluindo níveis não utilizados
q58_summary <- dados_discentes %>%
  count(q58, sort = TRUE) %>%
  complete(q58 = q58_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q58 = factor(q58, levels = q58_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q58_summary_diverging <- q58_summary %>%
  mutate(percent_answers = if_else(
    q58 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q58_summary_diverging, aes(x = q58, y = percent_answers, fill = q58)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q58_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores apresentaram o plano de ensino nos primeiros dias \n de aula?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.49
#| fig-cap: "Avaliação discente da atualidade e relevância do conteúdo das disciplinas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q59_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q59, incluindo níveis não utilizados
q59_summary <- dados_discentes %>%
  count(q59, sort = TRUE) %>%
  complete(q59 = q59_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q59 = factor(q59, levels = q59_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q59_summary_diverging <- q59_summary %>%
  mutate(percent_answers = if_else(
    q59 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q59_summary_diverging, aes(x = q59, y = percent_answers, fill = q59)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q59_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O conteúdo das disciplinas é atual e relevante?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.50
#| fig-cap: "Avaliação discente do cumprimento dos planos de ensino pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q60_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q60, incluindo níveis não utilizados
q60_summary <- dados_discentes %>%
  count(q60, sort = TRUE) %>%
  complete(q60 = q60_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q60 = factor(q60, levels = q60_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q60_summary_diverging <- q60_summary %>%
  mutate(percent_answers = if_else(
    q60 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q60_summary_diverging, aes(x = q60, y = percent_answers, fill = q60)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q60_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores cumprem o plano de ensino?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.51
#| fig-cap: "Avaliação discente da exposição do conteúdo pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q61_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q61, incluindo níveis não utilizados
q61_summary <- dados_discentes %>%
  count(q61, sort = TRUE) %>%
  complete(q61 = q61_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q61 = factor(q61, levels = q61_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q61_summary_diverging <- q61_summary %>%
  mutate(percent_answers = if_else(
    q61 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q61_summary_diverging, aes(x = q61, y = percent_answers, fill = q61)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q61_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores expõem o conteúdo de maneira clara?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.52
#| fig-cap: "Avaliação discente da adequação das metodologias utilizadas pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q62_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q62, incluindo níveis não utilizados
q62_summary <- dados_discentes %>%
  count(q62, sort = TRUE) %>%
  complete(q62 = q62_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q62 = factor(q62, levels = q62_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q62_summary_diverging <- q62_summary %>%
  mutate(percent_answers = if_else(
    q62 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q62_summary_diverging, aes(x = q62, y = percent_answers, fill = q62)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q62_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores utilizam metodologias adequadas ao ensino da \n disciplina?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.53
#| fig-cap: "Percepção discente sobre a manutenção de um ambiente de respeito mútuo pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q63_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q63, incluindo níveis não utilizados
q63_summary <- dados_discentes %>%
  count(q63, sort = TRUE) %>%
  complete(q63 = q63_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q63 = factor(q63, levels = q63_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q63_summary_diverging <- q63_summary %>%
  mutate(percent_answers = if_else(
    q63 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q63_summary_diverging, aes(x = q63, y = percent_answers, fill = q63)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q63_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores se preocupam em manter um clima de respeito mútuo?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.54
#| fig-cap: "Avaliação discente da pontualidade dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q63_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q63, incluindo níveis não utilizados
q63_summary <- dados_discentes %>%
  count(q63, sort = TRUE) %>%
  complete(q63 = q63_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q63 = factor(q63, levels = q63_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q63_summary_diverging <- q63_summary %>%
  mutate(percent_answers = if_else(
    q63 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q63_summary_diverging, aes(x = q63, y = percent_answers, fill = q63)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q63_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores iniciam e terminam a aula no horário previsto?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.55
#| fig-cap: "Avaliação discente da adequação das respostas dos docentes aos questionamentos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q65_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q65, incluindo níveis não utilizados
q65_summary <- dados_discentes %>%
  count(q65, sort = TRUE) %>%
  complete(q65 = q65_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q65 = factor(q65, levels = q65_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q65_summary_diverging <- q65_summary %>%
  mutate(percent_answers = if_else(
    q65 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q65_summary_diverging, aes(x = q65, y = percent_answers, fill = q65)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q65_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores respondem adequadamente os questionamentos dos \n alunos?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.56
#| fig-cap: "Avaliação discente da acessibilidade e comunicação dos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q66_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q66, incluindo níveis não utilizados
q66_summary <- dados_discentes %>%
  count(q66, sort = TRUE) %>%
  complete(q66 = q66_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q66 = factor(q66, levels = q66_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q66_summary_diverging <- q66_summary %>%
  mutate(percent_answers = if_else(
    q66 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q66_summary_diverging, aes(x = q66, y = percent_answers, fill = q66)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q66_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores são acessíveis e se comunicam bem com os alunos?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.57
#| fig-cap: "Percepção discente sobre a ética dos docentes com a turma."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q67_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q67, incluindo níveis não utilizados
q67_summary <- dados_discentes %>%
  count(q67, sort = TRUE) %>%
  complete(q67 = q67_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q67 = factor(q67, levels = q67_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q67_summary_diverging <- q67_summary %>%
  mutate(percent_answers = if_else(
    q67 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q67_summary_diverging, aes(x = q67, y = percent_answers, fill = q67)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q67_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os professores demonstram compromisso ético com a turma?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.58
#| fig-cap: "Avaliação discente das avaliações utilizada pelos docentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q68_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q68, incluindo níveis não utilizados
q68_summary <- dados_discentes %>%
  count(q68, sort = TRUE) %>%
  complete(q68 = q68_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q68 = factor(q68, levels = q68_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q68_summary_diverging <- q68_summary %>%
  mutate(percent_answers = if_else(
    q68 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q68_summary_diverging, aes(x = q68, y = percent_answers, fill = q68)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q68_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A forma como os professores avaliam (distribuem as notas) das \n disciplinas é clara e justa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação da Orientação  {#sec-avaorientdiscentes}

```{r}
#| label: fig-4.59
#| fig-cap: "Percepção discente sobre o tratamento dos orientadores aos orientandos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q70_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q70, incluindo níveis não utilizados
q70_summary <- dados_discentes %>%
  count(q70, sort = TRUE) %>%
  complete(q70 = q70_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q70 = factor(q70, levels = q70_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q70_summary_diverging <- q70_summary %>%
  mutate(percent_answers = if_else(
    q70 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q70_summary_diverging, aes(x = q70, y = percent_answers, fill = q70)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q70_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Trata o(a) orientando(a) de forma respeitosa e igualitária?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.60
#| fig-cap: "Percepção discente sobre a condução do processo de elaboração da disssertação pelos orientadores."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q71_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q71, incluindo níveis não utilizados
q71_summary <- dados_discentes %>%
  count(q71, sort = TRUE) %>%
  complete(q71 = q71_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q71 = factor(q71, levels = q71_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q71_summary_diverging <- q71_summary %>%
  mutate(percent_answers = if_else(
    q71 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q71_summary_diverging, aes(x = q71, y = percent_answers, fill = q71)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q71_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Conduz o processo de construção da dissertação de maneira \n adequada?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.61
#| fig-cap: "Avaliação discente do comparecimento dos orientadores às reuniões de orientação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q72_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q72, incluindo níveis não utilizados
q72_summary <- dados_discentes %>%
  count(q72, sort = TRUE) %>%
  complete(q72 = q72_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q72 = factor(q72, levels = q72_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q72_summary_diverging <- q72_summary %>%
  mutate(percent_answers = if_else(
    q72 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q72_summary_diverging, aes(x = q72, y = percent_answers, fill = q72)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q72_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Comparece aos encontros de orientação?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.62
#| fig-cap: "Avaliação discente do retorno dos orientadores aos textos produzidos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q73_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q73, incluindo níveis não utilizados
q73_summary <- dados_discentes %>%
  count(q73, sort = TRUE) %>%
  complete(q73 = q73_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q73 = factor(q73, levels = q73_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q73_summary_diverging <- q73_summary %>%
  mutate(percent_answers = if_else(
    q73 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q73_summary_diverging, aes(x = q73, y = percent_answers, fill = q73)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q73_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Retorna os textos produzidos pelo(a) orientando(a)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.63
#| fig-cap: "Avaliação discente do incentivo dos orientadores à produção científica."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q74_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q74, incluindo níveis não utilizados
q74_summary <- dados_discentes %>%
  count(q74, sort = TRUE) %>%
  complete(q74 = q74_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q74 = factor(q74, levels = q74_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q74_summary_diverging <- q74_summary %>%
  mutate(percent_answers = if_else(
    q74 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q74_summary_diverging, aes(x = q74, y = percent_answers, fill = q74)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q74_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Incentiva a produção científica do(a) orientando(a)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.64
#| fig-cap: "Percepção discente sobre a abertura dos orientadores à exposição de novas ideias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q75_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q75, incluindo níveis não utilizados
q75_summary <- dados_discentes %>%
  count(q75, sort = TRUE) %>%
  complete(q75 = q75_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q75 = factor(q75, levels = q75_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q75_summary_diverging <- q75_summary %>%
  mutate(percent_answers = if_else(
    q75 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q75_summary_diverging, aes(x = q75, y = percent_answers, fill = q75)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q75_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "É aberto ao debate e à exposição de novas ideias?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Autoavaliação em Relação à Orientação  {#sec-autoorientdiscentes}

```{r}
#| label: fig-4.65
#| fig-cap: "Autoavaliação discente do tratamento aos orientadores."
#| fig-width: 7.5 
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q77_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente", 
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q77, incluindo níveis não utilizados
q77_summary <- dados_discentes %>%
  count(q77, sort = TRUE) %>%
  complete(q77 = q77_levels, fill = list(n = 0)) %>%
  mutate(q77 = factor(q77, levels = q77_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q77_summary_diverging <- q77_summary %>%
  mutate(percent_answers = if_else(
    q77 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q77_summary_diverging, aes(x = q77, y = percent_answers, fill = q77)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q77_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44", 
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(), 
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Sou respeitoso com o(a) orientador(a)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.66
#| fig-cap: "Autoavaliação discente da disponibilidade às solicitações dos orientadores."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q78_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q78, incluindo níveis não utilizados
q78_summary <- dados_discentes %>%
  count(q78, sort = TRUE) %>%
  complete(q78 = q78_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q78 = factor(q78, levels = q78_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q78_summary_diverging <- q78_summary %>%
  mutate(percent_answers = if_else(
    q78 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q78_summary_diverging, aes(x = q78, y = percent_answers, fill = q78)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q78_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Estou disponível quando meu(minha) orientador(a) solicita?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.67
#| fig-cap: "Autoavaliação discente da efetividade no atendimento ao acordado com os orientadores nas reuniões."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q79_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q79, incluindo níveis não utilizados
q79_summary <- dados_discentes %>%
  count(q79, sort = TRUE) %>%
  complete(q79 = q79_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q79 = factor(q79, levels = q79_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q79_summary_diverging <- q79_summary %>%
  mutate(percent_answers = if_else(
    q79 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q79_summary_diverging, aes(x = q79, y = percent_answers, fill = q79)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q79_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Desenvolvo o trabalho de acordo com o que foi discutido nas \n reuniões de orientação?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.68
#| fig-cap: "Autoavaliação discente sobre o cumprimento dos prazos acordados com os orientadores."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q80_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q80, incluindo níveis não utilizados
q80_summary <- dados_discentes %>%
  count(q80, sort = TRUE) %>%
  complete(q80 = q80_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q80 = factor(q80, levels = q80_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q80_summary_diverging <- q80_summary %>%
  mutate(percent_answers = if_else(
    q80 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q80_summary_diverging, aes(x = q80, y = percent_answers, fill = q80)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q80_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Cumpro o prazo no envio dos textos ao(à) orientador(a)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.69
#| fig-cap: "Autoavaliação discente sobre a dedicaçõa exclusiva ao curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q81_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q81, incluindo níveis não utilizados
q81_summary <- dados_discentes %>%
  count(q81, sort = TRUE) %>%
  complete(q81 = q81_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q81 = factor(q81, levels = q81_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q81_summary_diverging <- q81_summary %>%
  mutate(percent_answers = if_else(
    q81 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q81_summary_diverging, aes(x = q81, y = percent_answers, fill = q81)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q81_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Tenho dedicação exclusiva ao curso?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.70
#| fig-cap: "Autoavaliação discente sobre a abertura ao debate de novas ideias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q82_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q82, incluindo níveis não utilizados
q82_summary <- dados_discentes %>%
  count(q82, sort = TRUE) %>%
  complete(q82 = q82_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q82 = factor(q82, levels = q82_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q82_summary_diverging <- q82_summary %>%
  mutate(percent_answers = if_else(
    q82 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q82_summary_diverging, aes(x = q82, y = percent_answers, fill = q82)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q82_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Estou aberto ao debate e à exposição de novas ideias?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Impacto da Pandemia da COVID-19  {#sec-pandemiadiscentes}

As respostas dos mestrandos sobre o impacto da pandemia da COVID-19 no 
curso foram divergentes:

- **Desafios com o formato remoto**: Um dos mestrandos destacou que a 
substituição das aulas presenciais por remotas prejudicou significativamente 
a interação entre professores e colegas, limitando debates e trocas de 
experiências. Além disso, o mestrando enfrentou desafios pessoais ao 
contrair COVID-19, o que afetou sua saúde e capacidade de acompanhar 
o curso.

- **Oportunidades e adaptação**: O outro mestrando viu a pandemia como 
uma oportunidade para desenvolver habilidades de estudo e comportamentais 
de maneira diferente, exigindo maior foco e disciplina para persistir no 
desenvolvimento das pesquisas e na assimilação dos conteúdos.

Essas respostas destacam a complexidade do impacto da pandemia no 
desempenho dos mestrandos. Enquanto alguns enfrentaram desafios 
significativos com o formato remoto, outros encontraram oportunidades 
para se adaptar e crescer. Isso sugere que o curso deve considerar 
estratégias para melhorar a interação remota e apoiar os estudantes que 
preferem ambientes presenciais, ao mesmo tempo em que promove a autonomia 
e disciplina necessárias para o sucesso em formatos remotos.

Por fim, as respostas dos mestrandos sobre o impacto da pandemia da 
COVID-19 no curso destacaram a importância de flexibilidade e suporte aos 
estudantes em diferentes contextos. O curso deve continuar a avaliar e 
adaptar suas estratégias pedagógicas para atender às necessidades dos 
estudantes em ambientes presenciais e remotos.



### Sugestões de Melhorias  {#sec-sugestdiscentes}

A política de autoavaliação do Programa de Pós-Graduação em Administração 
do IFMG - Campus Formiga, formalizada pela Portaria № 1706/IFMG, de 29 de 
novembro de 2024, destaca a importância da reflexão 
crítica e do aperfeiçoamento contínuo como fundamentais para garantir a 
qualidade e a relevância do programa [@portaria1706ifmg]. 

Nesse contexto, as sugestões dos discentes são muito importantes para 
identificar áreas de melhoria e fortalecer o programa. As sugestões 
recebidas foram coletadas por meio de questões abertas e refletem as 
percepções dos mestrandos participantes da pesquisa sobre os aspectos 
que podem ser aprimorados. As sugestões dos discentes para algumas 
dimensões avaliadas, categorizadas por temas, são exibidas a seguir.


::: {.callout-note icon=false}
## **Sugestões de Melhorias Gerais**

- **Direcionamento de Disciplinas Optativas**: Sugere-se que as disciplinas 
optativas sejam alinhadas com os objetivos das dissertações dos mestrandos, 
garantindo uma integração mais eficaz entre os conteúdos acadêmicos e as 
pesquisas individuais.

- **Promoção da Internacionalização e Atividades Extracurriculares**: 
Recomenda-se expandir as oportunidades de internacionalização, extensões 
e atividades extracurriculares para enriquecer a experiência acadêmica 
dos alunos.

- **Aumento de Oportunidades de Bolsas de Estudos**: Propõe-se aumentar o 
número de bolsas de estudos disponíveis para apoiar financeiramente os 
alunos.

- **Desenvolvimento de Atividades Complementares**: Sugere-se a criação 
de mais atividades extracurriculares que complementem os conteúdos abordados 
no programa, promovendo uma aprendizagem mais integral.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para a Coordenação**

- **Aperfeiçoamento da Publicidade das Decisões**: Recomenda-se ampliar a 
publicidade dss decisões do colegiado e da coordenação do mestrado para 
melhorar a comunicação com os mestrandos.

- **Integração com Alunos Especiais**: Sugere-se realizar uma breve 
apresentação do programa no início das disciplinas que contam com alunos 
especiais para facilitar a integração desses estudantes.

- **Comunicação sobre Processos de Bolsas**: Propõe-se aperfeiçoar a 
comunicação sobre o processo de bolsas, ampliando-se os prazos e 
divulgando os procedimentos com a maior antecedência possível.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para a Infraestrutura**

- **Melhoria do Espaço de Convivência**: Sugere-se melhorar o espaço 
de convivência, tornando-o mais atraente e funcional para os alunos.

- **Recepção e Apresentação da Estrutura**: Sugere-se realizar,
na recepção dos mestrandos, uma apresentação detalhada da estrutura do IFMG - 
Campus Formiga, destacando os recursos disponíveis.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para as Disciplinas Obrigatórias**

- **Revisão e Atualização de Conteúdos**: Sugere-se revisar periodicamente 
os conteúdos das disciplinas, garantindo sua atualização contínua e 
relevância para o programa.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para as Disciplinas Optativas**

- **Alinhamento com Objetivos de Pesquisa**: Sugere-se que as disciplinas 
optativas sejam direcionadas de acordo com os objetivos e temas das pesquisas 
dos alunos.

- **Oferta de Disciplinas Diferenciadas**: Sugere-se identificar 
regularmente novas necessidades e oferecer disciplinas optativas 
diferenciadas para atendê-las quando possível.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para os Orientadores**

- **Carga de Trabalho dos Orientadores**: Propõe-se avaliar a carga de 
trabalho dos orientadores para evitar sobrecarga e viabilizar condições 
de trabalho mais adequadas.

- **Ferramentas de Comunicação**: Sugere-se desenvolver ferramentas que 
melhorem a comunicação entre orientadores e orientados, potencializando o 
progresso das pesquisas.
:::



\pagebreak

## Corpo Docente {#sec-docentes}

Esta subseção apresenta os resultados da autoavaliação realizada pelo 
corpo docente do Mestrado Profissional em Administração. Os questionários 
aplicados permitiram avaliar:

- A qualidade geral do programa (@sec-avaprogdocentes);
- Incentivos à pesquisa (@sec-avaincentivosp);
- Atuação da coordenação (@sec-avacoorddocentes);
- Infraestrutura disponível (@sec-avainfradocentes);
- Atendimento administrativo (@sec-avasecdocentes).

Também foram analisadas as percepções dos docentes sobre as disciplinas 
obrigatórias (@sec-avadobrigdocentes) e optativas (@sec-avadoptadocentes), 
além das implicações da pandemia da COVID-19 no desenvolvimento das 
atividades acadêmicas (@sec-pandemiadocentes).

Os resultados oferecem uma perspectiva crítica sobre o 
papel dos docentes no desenvolvimento do programa e destacam 
áreas prioritárias para melhorias. As informações obtidas são 
fundamentais para embasar decisões estratégicas que visem a 
consolidação do programa e do curso.



### Síntese dos Principais Resultados {#sec-sintesedocentes}

O corpo docente demonstrou um alto nível de engajamento no processo 
avaliativo, com destaque para avaliações positivas nas dimensões relacionadas 
à qualidade geral do programa. Por outro lado, foram identificadas necessidades 
de revisão das disciplinas obrigatórias e optativas, ampliação de attividades 
extracurricularese e limitações na infraestrutura, como a necessidade 
de ambientes mais adequados para aulas híbridas e de um anfiteatro maior 
para a realização de eventos.  

Além disso, os docentes sugeriram ações estratégicas para a realização de 
uma revisão curricular dados os resultados obtidos no quadriênio, 
para o aperfeiçoamento da infraestrutura dedicada à pesquisa, como maior 
acesso a bases de dados especializadas, recursos 
computacionais modernos (hardware e software),à literatura especializada e 
uma maior mobilização para a prospecção de parcerias que possam gerar 
oportunidades de pesquisa e para a captação de recursos externos.  



### Taxa de Resposta  {#sec-docentestaxa}

A Tab. 4.4 mostra que a taxa de resposta do corpo docente atingiu 73%, 
refletindo um nível significativo de engajamento, altamente relevante 
para o processo de autoavaliação do programa. Embora a meta ideal seja 
alcançar uma adesão ainda maior, a representatividade obtida permitiu 
coletar avaliações e percepções do corpo docente de alta relevância sobre 
os diversos aspectos do programa, as quais certamente fornecem subsídios 
fundamentais para sua evolução contínua.


```{r}
#| tbl-cap: "Taxa de Resposta Docente."

dados_taxa_docentes <- tibble(
  Categoria = "Docentes",
  Respondentes = 8,
  Total_Docentes = 11,
  Taxa_Resposta = 0.73
)

dados_taxa_docentes |>
  mutate(Taxa_Resposta = paste0(round(Taxa_Resposta * 100, 0), "\\%")) |>
  kbl(
    col.names = c(
      "\\textbf{Categoria}", 
      "\\textbf{Respondentes}", 
      "\\textbf{Total}", 
      "\\textbf{Taxa de Resposta}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('c', 'c', 'c', 'c')
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped"),
    stripe_color = "white!20"
  ) |>
  row_spec(1, background = "lightblue") |>
  footnote(
    general = "Fonte: Comissão de Autovaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```



### Avaliação do Programa  {#sec-avaprogdocentes}

```{r}
#| label: fig-4.71
#| fig-cap: "Avaliação docente do Regimento do curso."
#| fig-width: 7.5 
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q3_levels <- c(
  "Ruim",
  "Insatisfatório", 
  "Regular",
  "Bom",
  "Excelente"
)

# Criar a tabela de frequência para a variável q3, incluindo níveis não utilizados
q3_summary <- dados_docentes %>%
  count(q3, sort = TRUE) %>%
  complete(q3 = q3_levels, fill = list(n = 0)) %>%
  mutate(q3 = factor(q3, levels = q3_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q3_summary_diverging <- q3_summary %>%
  mutate(percent_answers = if_else(
    q3 %in% c("Bom", "Excelente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q3_summary_diverging, aes(x = q3, y = percent_answers, fill = q3)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q3_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Ruim" = "#EE6677",
      "Insatisfatório" = "#CCBB44", 
      "Regular" = "grey80",
      "Bom" = "#66CCEE",
      "Excelente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(), 
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia o Regimento do Programa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.72
#| fig-cap: "Avaliação docente do processo de seleção do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q4_levels <- c(
  "Ruim",
  "Insatisfatório", 
  "Regular",
  "Bom",
  "Excelente"
)

# Criar a tabela de frequência para a variável q4, incluindo níveis não utilizados
q4_summary <- dados_docentes %>%
  count(q4, sort = TRUE) %>%
  complete(q4 = q4_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q4 = factor(q4, levels = q4_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q4_summary_diverging <- q4_summary %>%
  mutate(percent_answers = if_else(
    q4 %in% c("Bom", "Excelente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q4_summary_diverging, aes(x = q4, y = percent_answers, fill = q4)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q4_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Ruim" = "#EE6677",
      "Insatisfatório" = "#CCBB44", 
      "Regular" = "grey80",
      "Bom" = "#66CCEE",
      "Excelente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia o processo de seleção (divulgação, edital e realização)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.73
#| fig-cap: "Avaliação docente da interdisciplinaridade no Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q5_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q5, incluindo níveis não utilizados
q5_summary <- dados_docentes %>%
  count(q5, sort = TRUE) %>%
  complete(q5 = q5_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q5 = factor(q5, levels = q5_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q5_summary_diverging <- q5_summary %>%
  mutate(percent_answers = if_else(
    q5 %in% c("Concordo Parcialmente", "Concordo Totalmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q5_summary_diverging, aes(x = q5, y = percent_answers, fill = q5)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q5_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso utiliza ações de promoção da interdisciplinaridade?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.74
#| fig-cap: "Avaliação docente da internacionalização do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q6_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q6, incluindo níveis não utilizados
q6_summary <- dados_docentes %>%
  count(q6, sort = TRUE) %>%
  complete(q6 = q6_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q6 = factor(q6, levels = q6_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q6_summary_diverging <- q6_summary %>%
  mutate(percent_answers = if_else(
    q6 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q6_summary_diverging, aes(x = q6, y = percent_answers, fill = q6)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q6_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso emprega ações de promoção da internacionalização?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.75
#| fig-cap: "Avaliação docente das atividades de extensão."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q7_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q7, incluindo níveis não utilizados
q7_summary <- dados_docentes %>%
  count(q7, sort = TRUE) %>%
  complete(q7 = q7_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q7 = factor(q7, levels = q7_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q7_summary_diverging <- q7_summary %>%
  mutate(percent_answers = if_else(
    q7 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q7_summary_diverging, aes(x = q7, y = percent_answers, fill = q7)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q7_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades de extensão como cursos, projetos de \n extensão e outras ações e/ou integra-se à atividades extensionistas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.76
#| fig-cap: "Avaliação docente das atividades extraclasse."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q8_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q8, incluindo níveis não utilizados
q8_summary <- dados_docentes %>%
  count(q8, sort = TRUE) %>%
  complete(q8 = q8_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q8 = factor(q8, levels = q8_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q8_summary_diverging <- q8_summary %>%
  mutate(percent_answers = if_else(
    q8 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q8_summary_diverging, aes(x = q8, y = percent_answers, fill = q8)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q8_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso promove atividades extraclasse como seminários, palestras,\ngrupos de estudos, dentre outros?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.77
#| fig-cap: "Percepção docente sobre o ambiente criado pelo curso para o crescimento intelectual dos discentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q9_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q9, incluindo níveis não utilizados
q9_summary <- dados_docentes %>%
  count(q9, sort = TRUE) %>%
  complete(q9 = q9_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q9 = factor(q9, levels = q9_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q9_summary_diverging <- q9_summary %>%
  mutate(percent_answers = if_else(
    q9 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q9_summary_diverging, aes(x = q9, y = percent_answers, fill = q9)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q9_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O curso proporciona um ambiente favorável ao crescimento intelectual \n dos mestrandos?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.78
#| fig-cap: "Avaliação docente da qualidade do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q10_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q10, incluindo níveis não utilizados
q10_summary <- dados_docentes %>%
  count(q10, sort = TRUE) %>%
  complete(q10 = q10_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q10 = factor(q10, levels = q10_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q10_summary_diverging <- q10_summary %>%
  mutate(percent_answers = if_else(
    q10 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q10_summary_diverging, aes(x = q10, y = percent_answers, fill = q10)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q10_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com a qualidade do curso?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.79
#| fig-cap: "Avaliação docente da reputação do curso."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q11_levels <- c(
  "Abaixo das minhas expectativas",
  "Um pouco abaixo das minhas expectativas",
  "De acordo com as minhas expectativas",
  "Um pouco acima das minhas expectativas",
  "Acima das minhas expectativas"
)

# Criar a tabela de frequência para a variável q11, incluindo níveis não utilizados
q11_summary <- dados_docentes %>%
  count(q11, sort = TRUE) %>%
  complete(q11 = q11_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q11 = factor(q11, levels = q11_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q11_summary_diverging <- q11_summary %>%
  mutate(percent_answers = if_else(
    q11 %in% c("Acima das minhas expectativas", "Um pouco acima das minhas expectativas"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q11_summary_diverging, aes(x = q11, y = percent_answers, fill = q11)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q11_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Abaixo das minhas expectativas" = "#EE6677",
      "Um pouco abaixo das minhas expectativas" = "#CCBB44",
      "De acordo com as minhas expectativas" = "grey80",
      "Um pouco acima das minhas expectativas" = "#66CCEE",
      "Acima das minhas expectativas" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Como você avalia a reputação do curso no mercado \n e academia em relação às suas expectativas?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.80
#| fig-cap: "Conhecimento dos docentes sobre os objetivos do programa."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q12) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q12, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q12)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você conhece os objetivos do Programa?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



### Avaliação do Incetivo à Pesquisa {#sec-avaincentivosp}


```{r}
#| label: fig-4.81
#| fig-cap: "Avaliação docente da distribuição de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q14) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q14, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q14)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "O Programa tem clareza e transparência para a \n distribuição  das bolsas?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.82
#| fig-cap: "Avaliação docente dos critérios de manutenção de bolsas."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q15) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q15, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q15)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "Você acha que os critérios de manutenção \n de bolsa durante o curso são claros?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



```{r}
#| label: fig-4.83
#| fig-cap: "Avaliação docente do estímulo à participação em reuniões e eventos científicos."
#| fig-width: 4
#| fig-height: 4

# Criar tabela de frequência
ativ_tab <- dados_docentes %>%
  count(q16) %>%
  mutate(
    fraction = n / sum(n),
    ymax = cumsum(fraction),
    ymin = c(0, head(ymax, n = -1)),
    labelPosition = (ymax + ymin) / 2,
    label = paste0(q16, "\n", scales::percent(fraction, accuracy = 0.1))
  )

# Define cores manualmente para cada resposta
cores <- c(
  "Sim" = "#E69F00",
  "Não" = "#999999"
)

# Criar o gráfico donut
ggplot(ativ_tab, aes(ymax = ymax, ymin = ymin, xmax = 3.5, xmin = 2.5, fill = q16)) +
  geom_rect(color = NA) +
  geom_label(
    x = 3,
    aes(y = labelPosition, label = label),
    size = 3,
    fontface = "bold",
    color = "black"
  ) +
  scale_fill_manual(values = cores) +
  coord_polar(theta = "y") +
  xlim(c(2, 4)) +
  theme_void() +
  theme(legend.position = "none") +
  labs(
    title = "O Programa estimula a participação em reuniões \n de pesquisa, congressos, workshop, etc.?",
    caption = "Fonte: Comissão de Autovaliação."
  ) +
  theme(
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
    plot.caption = element_text(size = 8)
  )
```



### Avaliação da Coordenação do Programa {#sec-avacoorddocentes}

```{r}
#| label: fig-4.84
#| fig-cap: "Percepção docente sobre o compromisso da coordenação com a melhoria do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q18_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q18, incluindo níveis não utilizados
q18_summary <- dados_docentes %>%
  count(q18, sort = TRUE) %>%
  complete(q18 = q18_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q18 = factor(q18, levels = q18_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q18_summary_diverging <- q18_summary %>%
  mutate(percent_answers = if_else(
    q18 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q18_summary_diverging, aes(x = q18, y = percent_answers, fill = q18)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q18_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação demonstra compromisso com a melhoria do curso?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.85
#| fig-cap: "Avaliação docente da efetividade da coordenação no encaminhamento das solicitações ao colegiado."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q19_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q19, incluindo níveis não utilizados
q19_summary <- dados_docentes %>%
  count(q19, sort = TRUE) %>%
  complete(q19 = q19_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q19 = factor(q19, levels = q19_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q19_summary_diverging <- q19_summary %>%
  mutate(percent_answers = if_else(
    q19 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q19_summary_diverging, aes(x = q19, y = percent_answers, fill = q19)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q19_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação encaminha adequadamente as solicitações feitas \n ao Colegiado?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.86
#| fig-cap: "Avaliação doccente da comunicação da coordenação."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q20_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q20, incluindo níveis não utilizados
q20_summary <- dados_docentes %>%
  count(q20, sort = TRUE) %>%
  complete(q20 = q20_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q20 = factor(q20, levels = q20_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q20_summary_diverging <- q20_summary %>%
  mutate(percent_answers = if_else(
    q20 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q20_summary_diverging, aes(x = q20, y = percent_answers, fill = q20)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q20_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação envia avisos e comunicados de forma sistemática?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.87
#| fig-cap: "Percepção docente sobre a consideracão de suas opiniões pela coordenação para a tomada de decisões."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q21_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q21, incluindo níveis não utilizados
q21_summary <- dados_docentes %>%
  count(q21, sort = TRUE) %>%
  complete(q21 = q21_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q21 = factor(q21, levels = q21_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q21_summary_diverging <- q21_summary %>%
  mutate(percent_answers = if_else(
    q21 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q21_summary_diverging, aes(x = q21, y = percent_answers, fill = q21)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q21_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A coordenação considera a opinião dos docentes nas decisões?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação da Infraestrutura {#sec-avainfradocentes}

```{r}
#| label: fig-4.88
#| fig-cap: "Avaliação docente das salas disponíveis aos grupos pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q23_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q23, incluindo níveis não utilizados
q23_summary <- dados_docentes %>%
  count(q23, sort = TRUE) %>%
  complete(q23 = q23_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q23 = factor(q23, levels = q23_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q23_summary_diverging <- q23_summary %>%
  mutate(percent_answers = if_else(
    q23 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q23_summary_diverging, aes(x = q23, y = percent_answers, fill = q23)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q23_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas dos grupo de pesquisa \n(recursos de informática, mesas, impressoras, etc.)?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.89
#| fig-cap: "Avaliação docente dos recursos audiovisuais."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q24_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q24, incluindo níveis não utilizados
q24_summary <- dados_docentes %>%
  count(q24, sort = TRUE) %>%
  complete(q24 = q24_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q24 = factor(q24, levels = q24_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q24_summary_diverging <- q24_summary %>%
  mutate(percent_answers = if_else(
    q24 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q24_summary_diverging, aes(x = q24, y = percent_answers, fill = q24)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q24_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com os recursos audiovisuais?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.90
#| fig-cap: "Avaliação docente das salas de aula."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q25_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q25, incluindo níveis não utilizados
q25_summary <- dados_docentes %>%
  count(q25, sort = TRUE) %>%
  complete(q25 = q25_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q25 = factor(q25, levels = q25_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q25_summary_diverging <- q25_summary %>%
  mutate(percent_answers = if_else(
    q25 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q25_summary_diverging, aes(x = q25, y = percent_answers, fill = q25)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q25_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com as salas de aula?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.91
#| fig-cap: "Avaliação docente do anfiteatro para eventos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q26_levels <- c(
  "Totalmente Insatisfeito",
  "Parcialmente Insatisfeito",
  "Nem Satisfeito, Nem Insatisfeito",
  "Parcialmente Satisfeito",
  "Totalmente Satisfeito"
)

# Criar a tabela de frequência para a variável q26, incluindo níveis não utilizados
q26_summary <- dados_docentes %>%
  count(q26, sort = TRUE) %>%
  complete(q26 = q26_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q26 = factor(q26, levels = q26_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q26_summary_diverging <- q26_summary %>%
  mutate(percent_answers = if_else(
    q26 %in% c("Totalmente Satisfeito", "Parcialmente Satisfeito"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q26_summary_diverging, aes(x = q26, y = percent_answers, fill = q26)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q26_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Totalmente Insatisfeito" = "#EE6677",
      "Parcialmente Insatisfeito" = "#CCBB44",
      "Nem Satisfeito, Nem Insatisfeito" = "grey80",
      "Parcialmente Satisfeito" = "#66CCEE",
      "Totalmente Satisfeito" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Qual o seu nível de satisfação com o anfiteatro para eventos?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação do Atendimento da Secretaria {#sec-avasecdocentes}

```{r}
#| label: fig-4.92
#| fig-cap: "Avaliação docente do tratamento dado pela Secretaria do Progorama."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q33_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q33, incluindo níveis não utilizados
q33_summary <- dados_docentes %>%
  count(q33, sort = TRUE) %>%
  complete(q33 = q33_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q33 = factor(q33, levels = q33_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q33_summary_diverging <- q33_summary %>%
  mutate(percent_answers = if_else(
    q33 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q33_summary_diverging, aes(x = q33, y = percent_answers, fill = q33)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q33_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria trata os docentes de maneira respeitosa e igualitária?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.93
#| fig-cap: "Avaliação docente da agilidade da Secretaria para emitir documentos."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q29_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q29, incluindo níveis não utilizados
q29_summary <- dados_docentes %>%
  count(q29, sort = TRUE) %>%
  complete(q29 = q29_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q29 = factor(q29, levels = q29_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q29_summary_diverging <- q29_summary %>%
  mutate(percent_answers = if_else(
    q29 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q29_summary_diverging, aes(x = q29, y = percent_answers, fill = q29)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q29_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria emite declarações/documentos em tempo hábil?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.94
#| fig-cap: "Avaliação docente do horário de funcionamento da Secretaria do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q30_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q30, incluindo níveis não utilizados
q30_summary <- dados_docentes %>%
  count(q30, sort = TRUE) %>%
  complete(q30 = q30_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q30 = factor(q30, levels = q30_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q30_summary_diverging <- q30_summary %>%
  mutate(percent_answers = if_else(
    q30 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q30_summary_diverging, aes(x = q30, y = percent_answers, fill = q30)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q30_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "O horário de funcionamento da Secretaria atende às minhas \n necessidades?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.95
#| fig-cap: "Avaliação docente da agilidade da Secretaria na resposta às demandas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q31_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q31, incluindo níveis não utilizados
q31_summary <- dados_docentes %>%
  count(q31, sort = TRUE) %>%
  complete(q31 = q31_levels, fill = list(n = 0)) %>%  # Adicionar níveis não utilizados com 0
  mutate(q31 = factor(q31, levels = q31_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q31_summary_diverging <- q31_summary %>%
  mutate(percent_answers = if_else(
    q31 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q31_summary_diverging, aes(x = q31, y = percent_answers, fill = q31)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q31_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "A Secretaria é ágil nas respostas às demandas encaminhadas pelos \n docentes?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Avaliação das Disciplinas Obrigatórias {#sec-avadobrigdocentes}


```{r}
#| label: fig-4.96
#| fig-cap: "Avaliação docente da contribuição das disciplinas obrigatórias para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades dos discentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q33_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q33, incluindo níveis não utilizados
q33_summary <- dados_docentes %>%
  count(q33, sort = TRUE) %>%
  complete(q33 = q33_levels, fill = list(n = 0)) %>%
  mutate(q33 = factor(q33, levels = q33_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q33_summary_diverging <- q33_summary %>%
  mutate(percent_answers = if_else(
    q33 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q33_summary_diverging, aes(x = q33, y = percent_answers, fill = q33)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q33_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contribuem para apreensão de novos \n conhecimentos e desenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.97
#| fig-cap: "Avaliação docente da compatibilidade dos créditos exigidos em disciplinas obrigatórias com o objetivo do programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q34_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q34, incluindo níveis não utilizados
q34_summary <- dados_docentes %>%
  count(q34, sort = TRUE) %>%
  complete(q34 = q34_levels, fill = list(n = 0)) %>%
  mutate(q34 = factor(q34, levels = q34_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q34_summary_diverging <- q34_summary %>%
  mutate(percent_answers = if_else(
    q34 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q34_summary_diverging, aes(x = q34, y = percent_answers, fill = q34)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q34_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os créditos exigidos em disciplinas obrigatórias são compatíveis com \n os objetivos do programa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```




```{r}
#| label: fig-4.98
#| fig-cap: "Avaliação docente da coerência das disciplinas obrigatórias com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q35_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q35, incluindo níveis não utilizados
q35_summary <- dados_docentes %>%
  count(q35, sort = TRUE) %>%
  complete(q35 = q35_levels, fill = list(n = 0)) %>%
  mutate(q35 = factor(q35, levels = q35_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q35_summary_diverging <- q35_summary %>%
  mutate(percent_answers = if_else(
    q35 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q35_summary_diverging, aes(x = q35, y = percent_answers, fill = q35)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q35_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias são coerentes com as linhas de pesquisa do\nPrograma?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.99
#| fig-cap: "Avaliação docente da aplicabilidade das disciplinas obrigatórias para a pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q36_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q36, incluindo níveis não utilizados
q36_summary <- dados_docentes %>%
  count(q36, sort = TRUE) %>%
  complete(q36 = q36_levels, fill = list(n = 0)) %>%
  mutate(q36 = factor(q36, levels = q36_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q36_summary_diverging <- q36_summary %>%
  mutate(percent_answers = if_else(
    q36 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q36_summary_diverging, aes(x = q36, y = percent_answers, fill = q36)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q36_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias possuem aplicabilidade para a pesquisa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.100
#| fig-cap: "Avaliação docente da atualidade da bibliografia das disciplinas obrigatórias."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q37_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q37, incluindo níveis não utilizados
q37_summary <- dados_docentes %>%
  count(q37, sort = TRUE) %>%
  complete(q37 = q37_levels, fill = list(n = 0)) %>%
  mutate(q37 = factor(q37, levels = q37_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q37_summary_diverging <- q37_summary %>%
  mutate(percent_answers = if_else(
    q37 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q37_summary_diverging, aes(x = q37, y = percent_answers, fill = q37)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q37_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas obrigatórias contam com bibliografia atualizada?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```





### Avaliação das Disciplinas Optativas {#sec-avadoptadocentes}


```{r}
#| label: fig-4.101
#| fig-cap: "Avaliação docente da contribuição das disciplinas optativas para a apreensão de novos conhecimentos e desenvolvimento de novas habilidades dos discentes."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q39_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q39, incluindo níveis não utilizados
q39_summary <- dados_docentes %>%
  count(q39, sort = TRUE) %>%
  complete(q39 = q39_levels, fill = list(n = 0)) %>%
  mutate(q39 = factor(q39, levels = q39_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q39_summary_diverging <- q39_summary %>%
  mutate(percent_answers = if_else(
    q39 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q39_summary_diverging, aes(x = q39, y = percent_answers, fill = q39)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q39_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contribuem para apreensão de novos \n conhecimentos e desenvolvimento de novas habilidades?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.102
#| fig-cap: "Avaliação docente da compatibilidade dos créditos exigidos em disciplinas optativas com o objetivo do programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q40_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q40, incluindo níveis não utilizados
q40_summary <- dados_docentes %>%
  count(q40, sort = TRUE) %>%
  complete(q40 = q40_levels, fill = list(n = 0)) %>%
  mutate(q40 = factor(q40, levels = q40_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q40_summary_diverging <- q40_summary %>%
  mutate(percent_answers = if_else(
    q40 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q40_summary_diverging, aes(x = q40, y = percent_answers, fill = q40)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q40_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "Os créditos exigidos em disciplinas optativas são compatíveis com \n os objetivos do programa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.103
#| fig-cap: "Avaliação docente da coerência das disciplinas optativas com as linhas de pesquisa do Programa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q41_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q41, incluindo níveis não utilizados
q41_summary <- dados_docentes %>%
  count(q41, sort = TRUE) %>%
  complete(q41 = q41_levels, fill = list(n = 0)) %>%
  mutate(q41 = factor(q41, levels = q41_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q41_summary_diverging <- q41_summary %>%
  mutate(percent_answers = if_else(
    q41 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q41_summary_diverging, aes(x = q41, y = percent_answers, fill = q41)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q41_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas são coerentes com as linhas de pesquisa do\nPrograma?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-104
#| fig-cap: "Avaliação docente da aplicabilidade das disciplinas optativas para a pesquisa."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q42_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q42, incluindo níveis não utilizados
q42_summary <- dados_docentes %>%
  count(q42, sort = TRUE) %>%
  complete(q42 = q42_levels, fill = list(n = 0)) %>%
  mutate(q42 = factor(q42, levels = q42_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q42_summary_diverging <- q42_summary %>%
  mutate(percent_answers = if_else(
    q42 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q42_summary_diverging, aes(x = q42, y = percent_answers, fill = q42)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q42_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas possuem aplicabilidade para a pesquisa?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-4.105
#| fig-cap: "Avaliação docente da atualidade da bibliografia das disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q43_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q43, incluindo níveis não utilizados
q43_summary <- dados_docentes %>%
  count(q43, sort = TRUE) %>%
  complete(q43 = q43_levels, fill = list(n = 0)) %>%
  mutate(q43 = factor(q43, levels = q43_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q43_summary_diverging <- q43_summary %>%
  mutate(percent_answers = if_else(
    q43 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q43_summary_diverging, aes(x = q43, y = percent_answers, fill = q43)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q43_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contam com bibliografia atualizada?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



```{r}
#| label: fig-d106
#| fig-cap: "Avaliação docente da diversidade de temas contemplados pelas disciplinas optativas."
#| fig-width: 7.5
#| fig-height: 4.5

# Definir todos os níveis possíveis da escala Likert
q44_levels <- c(
  "Discordo Totalmente",
  "Discordo Parcialmente",
  "Não Concordo, Nem Discordo",
  "Concordo Parcialmente",
  "Concordo Totalmente"
)

# Criar a tabela de frequência para a variável q44, incluindo níveis não utilizados
q44_summary <- dados_docentes %>%
  count(q44, sort = TRUE) %>%
  complete(q44 = q44_levels, fill = list(n = 0)) %>%
  mutate(q44 = factor(q44, levels = q44_levels)) %>%
  mutate(
    percent_answers = n / sum(n),
    percent_answers_label = percent(percent_answers, accuracy = 1)
  )

# Criar dados para o gráfico de barras divergentes
q44_summary_diverging <- q44_summary %>%
  mutate(percent_answers = if_else(
    q44 %in% c("Concordo Totalmente", "Concordo Parcialmente"),
    percent_answers,
    -percent_answers
  )) %>%
  mutate(percent_answers_label = if_else(percent_answers == 0, "0%", percent(abs(percent_answers), accuracy = 1)))

# Criar o gráfico de barras divergentes
ggplot(q44_summary_diverging, aes(x = q44, y = percent_answers, fill = q44)) +
  geom_col() +
  geom_text(
    aes(
      label = percent_answers_label,
      hjust = if_else(percent_answers == 0, -0.2, 0.5)
    ),
    position = position_stack(vjust = 0.5),
    color = if_else(q44_summary_diverging$percent_answers == 0, "black", "white"),
    fontface = "bold",
    size = 3.5
  ) +
  coord_flip() +
  scale_x_discrete() +
  scale_fill_manual(
    values = c(
      "Discordo Totalmente" = "#EE6677",
      "Discordo Parcialmente" = "#CCBB44",
      "Não Concordo, Nem Discordo" = "grey80",
      "Concordo Parcialmente" = "#66CCEE",
      "Concordo Totalmente" = "#4477AA"
    )
  ) +
  theme_minimal() +
  theme(
    text = element_text(family = "sans"),
    plot.title = element_text(size = 11, face = "bold", hjust = 0),
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_text(size = 10, face = "bold"),
    panel.grid = element_blank(),
    legend.position = "none",
    plot.margin = margin(
      t = 15,
      r = 15,
      b = 15,
      l = 15,
      unit = "pt"
    ),
    plot.caption = element_text(size = 9)
  ) +
  labs(
    title = "As disciplinas optativas contemplam temas variados?",
    caption = "Fonte: Comissão de Autovaliação.",
    x = NULL,
    fill = NULL
  )
```



### Impacto da Pandemia da COVID-19 {#sec-pandemiadocentes}

Os docentes do curso responderam à pergunta sobre como a pandemia alterou 
a dinâmica e o processo de ensino-aprendizagem no Mestrado da 
seguinte forma:

- **Minimização do impacto**: Alguns docentes destacaram que o impacto 
negativo foi minimizado com a adoção de disciplinas remotas ministradas 
de forma híbrida. Outros mencionaram que a possibilidade de frequentar 
as disciplinas de forma remota aumentou a participação de estudantes de 
municípios distantes.

- **Desafios com aulas remotas**: Outros docentes expressaram preocupações 
sobre a eficácia das aulas remotas, considerando que elas 
proporcionaramm um rendimento inferior ao das aulas presenciais. Além disso, 
alguns mencionaram dificuldades no início do curso e um desinteresse 
generalizado pela pós-graduação.

- **Adaptação e esforço conjunto**: Alguns docentes destacaram a adaptação 
imediata ao ambiente virtual e o esforço conjunto de estudantes, docentes 
e servidores para minimizar os impactos da pandemia na qualidade do ensino 
e aprendizagem.

- **Mudanças permanentes**: Um dos docentes mencionou que o processo de 
ensino-aprendizagem mudou permanentemente devido ao uso de tecnologias e 
ao perfil dos alunos.

- **Preparação inadequada**: Outro docente destacou que nem os mestrandos 
nem os docentes estavam preparados para iniciar um curso de mestrado nas 
condições impostas pela pandemia.

As respostas dos docentes revelaram uma variedade de percepções sobre o 
impacto da pandemia no curso. Enquanto alguns viram oportunidades para 
aumentar a acessibilidade, outros enfrentaram desafios significativos 
com o formato remoto. Isso sugere que o curso deve investir em estratégias 
para apoiar os docentes na adaptação às novas tecnologias e metodologias.

Em resumo, as respostas dos docentes sobre o impacto da pandemia 
no curso destacam a importância de flexibilidade, adaptação e suporte 
tanto para os estudantes quanto para os docentes. O curso deve continuar 
a avaliar e adaptar suas estratégias pedagógicas para atender às 
necessidades de todos os envolvidos em ambientes presenciais ou remotos.


### Sugestões de Melhorias {#sec-sugestdocentes}

A política de autoavaliação do Programa de Pós-Graduação em Administração 
do IFMG - Campus Formiga enfatiza a importância da participação ativa dos 
docentes no processo de reflexão crítica e aperfeiçoamento contínuo. 

As sugestões apresentadas pelos docentes, que atuam diretamente no 
desenvolvimento do programa, oferecem uma perspectiva valiosa sobre 
as áreas que necessitam de ajustes e melhorias. As sugestões 
recebidas do corpo docente para algumas das dimensões avaliadas, 
categorizadas por temas, são exibidas a seguir.


::: {.callout-note icon=false}
## **Sugestões de Melhorias Gerais para o Programa**

- **Revisão e Atualização do Currículo**: Sugere-se reavaliar a sequência 
das disciplinas e o rol de disciplinas optativas para garantir uma formação 
mais coerente e atualizada.

- **Plano Estratégico para o Doutorado**: Propõe-se desenvolver 
um plano estratégico para futura aprovação de um programa de doutorado, 
ajustando o currículo e o processo seletivo conforme necessário.

- **Atividades de Extensão e Extraclasse**: Sugere-se ampliar a oferta 
de atividades de extensão, como cursos, projetos e seminários, além de 
minicursos e palestras para enriquecer a experiência acadêmica.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para Incentivos à Pesquisa**

- **Captação de Recursos para Bolsas**: Recomenda-se buscar captação de 
recursos para oferecer mais bolsas de estudos.

- **Incentivo à Publicação em Periódicos de Impacto**: Propõe-se criar 
melhores condições e incentivar o aumento da publicação em periódicos de 
de alto impacto.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para a Coordenação**

- **Participação e Envolvimento dos Docentes**: Sugere-se a adoção de 
medidas ou incentivos para um maior engajamento do corpo docente 
na construção e evolução do curso.

- **Parcerias com Empresas da Região**: Recomenda-se ampliar a 
prospecção e a interação com empresas da região para fortalecer e criar 
novas parcerias e oportunidades para a pesquisa.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para a Infraestrutura**

- **Ambientes para Aulas Híbridas**: Propõe-se aperfeiçoar os ambientes 
para aulas remotas ou híbridas.

- **Anfiteatro para Eventos**: Sugere-se a construção de um anfiteatro 
maiorpara eventos acadêmicos, melhorando a capacidade de realização de 
seminários e congressos.

- **Acesso a Recursos Computacionais e Literatura**: Recomenda-se ampliar 
o acesso a recursos computacionais, softwares e literatura especializada 
para apoiar as atividades de pesquisa.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para as Disciplinas Obrigatórias**

- **Reavaliação das Disciplinas Obrigatórias**: Sugere-se reavaliar as 
disciplinas obrigatórias para garantir consistência com as linhas de pesquisa 
e a formação pretendida.

- **Inclusão de Métodos Específicos de Pesquisa**: Propõe-se incluir 
disciplinas que abordem métodos específicos de pesquisa quantitativa, 
alinhando-se com as necessidades dos alunos durante o desenvolvimento de 
seus projetos.
:::


::: {.callout-note icon=false}
## **Sugestões de Melhorias para as Disciplinas Optativas**

- **Revisão e Expansão das Disciplinas Optativas**: Recomenda-se reavaliar 
as disciplinas optativas para alinhar-se com as tendências de
pesquisa dos professores e alunos.
:::




# Ações Executadas e Demandadas a Partir da Autoavaliação {#sec-acoesdemanda}

 O processo de autoavaliação do Mestrado Profissional em Administração 
do IFMG - Campus Formiga, realizado ao longo do quadriênio 2021-2024, 
possibilitou a identificação de aspectos positivos, desafios e oportunidades 
de aprimoramento do programa. A partir da análise dos dados coletados, 
a Comissão de Autoavaliação sistematizou as principais demandas 
apresentadas pelos diferentes segmentos acadêmicos, algumas das quais 
resultaram em ações concretas de melhoria, e propôs um 
conjunto de ações estratégicas para fortalecer a estrutura curricular, 
a infraestrutura, a gestão administrativa e para enriquecer a experiência 
dos mestrandos.  

Nesta seção, apresentam-se as ações já implementadas em resposta às demandas 
identificadas ao longo do quadriênio (@sec-executadas), bem como aquelas 
que permanecem em fase de planejamento ou execução (@sec-demandadas). A 
implementação dessas ações será acompanhada pela Comissão de Autoavaliação 
para que os ajustes necessários sejam feitos com base em novas avaliações 
e feedbacks dos diferentes segmentos.



## Ações Executadas {#sec-executadas}

Durante o processo de autoavaliação, algumas demandas foram identificadas 
e atendidas por meio da implementação de ações específicas, enquanto 
outras permanecem em fase de planejamento ou execução. A Tab. 5.1 
apresenta um resumo das demandas que já resultaram em ações concretas.

```{r}
#| tbl-cap: "Demandas Identificadas no Processo de Autoavaliação e Ações Executadas."

tabela_demandas <- data.frame(
  Demanda = c(
    "Demanda por oportunidades para exposição do estágio do desenvolvimento dos projetos de Qualificação e Dissertação e obtenção de feedbacks.",
    "Demanda por redução da carga horária de disciplinas obrigatórias, considerando o perfil profissional dos mestrandos.",
    "Demanda por maior suporte ao trabalho dos docentes e discentes pela coordenação."
  ),
  Acao = c(
    "Criação dos Seminários de Qualificação e Dissertação.",
    "Alteração da disciplina 'Inovação Aplicada às Finanças' de obrigatória para optativa.",
    "Implementação de ações para melhor suporte acadêmico e administrativo aos docentes e discentes."
  ),
  Dimensao = c(
    "Matriz Curricular",
    "Matriz Curricular",
    "Coordenação do Curso"
  )
)

tabela_demandas |>
  kbl(
    col.names = c(
      "\\textbf{Demanda Identificada}",
      "\\textbf{Ação Executada}",
      "\\textbf{Dimensão}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('l', 'l', 'c'),
    longtable = FALSE
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped", "repeat_header"),
    stripe_color = "gray!10",
    font_size = 12
  ) |>
  column_spec(1, width = "6cm") |>
  column_spec(2, width = "5cm") |>
  column_spec(3, width = "3cm") |>
  footnote(
    general = "Fonte: Comissão de Autoavaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```


## Ações Demandadas {#sec-demandadas}

Ao longo do processo autoavaliativo, a Comissão de Autoavaliação identificou, 
um conjunto de demandas estratégicas a partir de uma análise crítica dos dados coletados. Essa abordagem permitiu identificar temas recorrentes e 
sintetizar sugestões apresentadas pelos diferentes segmentos acadêmicos.

Além disso, a Comissão de Autoavaliação considerou informações 
complementares obtidas ao longo do quadriênio, como discussões realizadas, 
reuniões e feedbacks informais da comunidade acadêmica. Esse esforço resultou 
em uma síntese que busca equilibrar as demandas dos diferenets segmentos com 
a visão global da comissão, visando assegurar que as ações propostas 
sejam viáveis e alinhadas ao objetivo estratégico de melhoria 
contínua do programa, essas ações estão organizadas na Tab. 5.2.

A implementação dessas ações será monitorada em ciclos avaliativos 
subsequentes, visando que os resultados do processo de autoavaliação 
contribuam efetivamente para o aprimoramento contínuo do programa.


::: {.landscape}

```{r}
#| label: tbl-5.2
#| tbl-cap: "Ações Demandadas a Partir do Processo de Autoavaliação."

# Criar o data frame com os dados originais
tabela_acoes_demandadas <- data.frame(
  Demanda = c(
    "Reavaliar as disciplinas obrigatórias e optativas, bem como sua sequência, para alinhá-las melhor às linhas de pesquisa do mestrado e aprimorar o desenvolvimento das competências necessárias aos mestrandos para a formulação e execução de projetos de pesquisa de alto impacto, com base nos resultados obtidos no quadriênio.",
    "Solicitar às instâncias competentes do IFMG a ampliação do acesso à bases de dados especializadas, a recursos computacionais modernos (hardware e softwares) e `a literatura especializada, aprimorando a infraestrura de apoio às atividades de pesquisa do programa.",
    "Expandir as oportunidades de atividades extracurriculares, de internacionalização e de extensão para enriquecer a experiência acadêmica dos mestrandos.",
    "Ampliar a prospecção e a interação com empresas da região para fortalecer as parcerias atuais e criar novas parcerias e oportunidades de pesquisa.",
    "Elaborar e implementar um Código de Conduta para orientadores e orientandos, com o objetivo de estabelecer expectativas claras, promover relações acadêmicas saudáveis e prevenir conflitos, contribuindo para a evolução e consolidação do mestrado.",
    "Buscar captação de recursos para oferecer mais bolsas de estudos.",
    "Encaminhar às instâncias competentes do IFMG a demanda pelo aperfeiçoamento dos recursos para aulas remotas ou híbridas.",
    "Encaminhar às instâncias competentes do IFMG a necessidade de monitoramento da carga de trabalho dos docentes permanentes para evitar sobrecarga e aumentar a produtividade exigida em um programa stricto sensu.",
    "Adotar medidas ou incentivos para um maior engajamento do corpo docente na construção e evolução do curso.",
    "Desenvolver um nova plano estratégico para a consolidação do mestrado e para uma futura aprovação de um programa de doutorado.",
    "Ampliar a publicidade das decisões do colegiado e da coordenação do mestrado para aperfeiçoar a comunicação com os mestrandos.",
    "Realizar uma breve apresentação do programa no início das disciplinas que contam com alunos especiais para facilitar a integração desses estudantes.",
    "Realizar, na recepção dos mestrandos, uma apresentação detalhada da estrutura do IFMG - Campus Formiga, destacando os recursos disponíveis.",
    "Encaminhar às instâncias competentes do IFMG a demanda por melhoria do espaço de convivência, tornando-o mais atraente e funcional para os mestrandos.",
    "Aperfeiçoar a comunicação sobre o processo de bolsas, ampliando-se os prazos e divulgando os procedimentos com a maior antecedência possível.",
    "Encaminhar às instâncias competentes do IFMG a demanda por um anfiteatro maior para eventos, para aumentar a capacidade de realização de seminários e congressos."
  ),
  Representacao = c(
    "Colegiado do curso",
    "Coordenação do curso",
    "Coordenação e Colegiado do curso",
    "Coordenação do curso",
    "Colegiado do Curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso e Docentes",
    "Colegiado do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso",
    "Coordenação do curso"
  ),
  Dimensao = c(
    "Matriz curricular",
    "Infraestrutura",
    "Atividades extracurriculares, de extensão e internacionalização",
    "Coordenação do Programa",
    "Alinhamento às boas práticas internacionais de orientação acadêmica",
    "Incentivos à pesquisa",
    "Infraestrutura",
    "Coordenação do Programa",
    "Coordenação do Programa",
    "Planejamento estratégico do Programa",
    "Coordenação do Programa",
    "Coordenação do Programa",
    "Infraestrutura",
    "Infraestrutura",
    "Coordenação do Programa",
    "Infraestrutura"
  )
)

# Formatação da tabela
tabela_acoes_demandadas |>
  kbl(
    col.names = c(
      "\\textbf{Demanda}",
      "\\textbf{Representação}",
      "\\textbf{Dimensão}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('l', 'c', 'l'),
    longtable = TRUE
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped", "repeat_header"),
    stripe_color = "gray!10",
    font_size = 12
  ) |>
  column_spec(1, width = "12cm") |>
  column_spec(2, width = "4.5cm") |>
  column_spec(3, width = "6cm") |>
  footnote(
    general = "Fonte: Comissão de Autovaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```


:::





# Meta-Avaliação {#sec-metaavaliacao}

A meta-avaliação do processo de autoavaliação foi conduzida como etapa final 
do ciclo avaliativo referente ao quadriênio 2021-2024. Essa etapa, prevista 
na Política de Autoavaliação formalizada pela Portaria Nº 1706/IFMG/2024, 
teve como propósito principal revisar criticamente os instrumentos, métodos 
e processos utilizados ao longo do período.


## Objetivos da Meta-Avaliação

A meta-avaliação foi orientada pelos seguintes objetivos:

- **Aprimorar os Instrumentos Avaliativos**: Revisar questionários e 
indicadores utilizados para garantir que sejam adequados às necessidades 
do programa.

- **Avaliar a Efetividade Metodológica**: Examinar se os métodos aplicados 
foram eficazes para captar as informações necessárias à tomada de decisão.

- **Identificar Oportunidades de Melhoria**: Detectar fragilidades no 
processo avaliativo e propor ajustes para aprimorar futuras autoavaliações.

- **Fortalecer a Transparência e o Diálogo**: Promover a participação da 
comunidade acadêmica na análise dos resultados e no planejamento das melhorias.


## Metodologia

A meta-avaliação seguiu uma abordagem sistemática, dividida em cinco 
etapas principais:

1. **Revisão dos Instrumentos**: Análise detalhada dos questionários aplicados 
aos segmentos acadêmicos. com foco na clareza das perguntas e na abrangência 
das dimensões avaliadas.

2. **Análise Crítica dos Resultados**: Verificação da consistência dos dados 
coletados ao longo do quadriênio, utilizando técnicas estatísticas 
descritivas para os dados quantitativos e análise de conteúdo para as 
respostas qualitativas.

3. **Consulta à Comunidade Acadêmica**: Realização de reuniões para discutir 
os resultados da autoavaliação e coletar feedbacks sobre o processo 
avaliativo.

4. **Elaboração do Relatório Final**: Consolidação das análises realizadas 
em um documento que destaca pontos fortes, fragilidades e recomendações para 
aprimoramento.

5. **Planejamento das Melhorias**: Proposição de ajustes nos instrumentos 
avaliativos, metodologias e estratégias de engajamento para futuros ciclos.


## Resultados da Meta-Avaliação

Os resultados da meta-avaliação indicaram dimensões e aspectos bem 
avaliados no processo avaliativo do programa, mas também apontaram 
aspectos que podem ser aprimorados:


::: {.callout-note icon=false}
## **Pontos Fortes**

- Os instrumentos utilizados foram considerados abrangentes por captarem 
percepções relevantes sobre ensino, pesquisa, extensão e gestão.

- A análise de conteúdo aplicada às respostas qualitativas revelou insights 
importants sobre as expectativas e demandas da comunidade acadêmica.

- A participação dos segmentos acadêmicos garantiu uma representatividade 
adequada das respostas.
:::


::: {.callout-note icon=false}
## **Áreas de Melhoria**:

- Necessidade de maior clareza em algumas questões abertas dos questionários 
para facilitar a categorização das respostas durante a análise qualitativa.

- Inclusão de indicadores mais específicos para monitorar o impacto das 
ações implementadas com base nos resultados da autoavaliação.

- Estratégias adicionais para aumentar a taxa de resposta em determinados 
grupos (por exemplo, discentes ingressantes).
:::


## Recomendações

Com base nos principais resultados da meta-avaliação, foram propostas as 
ações exibidas na Tab. 6.1.

```{r}
#| tbl-cap: "Meta-Avaliação: Recomendações."

tabela_recomendacoes <- data.frame(
  Recomendacao = c(
    "Revisar os instrumentos avaliativos para garantir maior alinhamento às necessidades específicas do programa.",
    "Ampliar a comunicação sobre o processo avaliativo, promovendo maior engajamento dos segmentos acadêmicos.",
    "Desenvolver indicadores mais detalhados para avaliar o impacto das ações implementadas.",
    "Implementar treinamentos ou orientações prévias aos respondentes para aumentar a qualidade das respostas fornecidas."
  ),
  Responsavel = c(
    "Comissão de Autoavaliação",
    "Comissão de Autoavaliação",
    "Comissão de Autoavaliação",
    "Comissão de Autoavaliação"
  )
)

tabela_recomendacoes |>
  kbl(
    col.names = c(
      "\\textbf{Recomendação}",
      "\\textbf{Responsável}"
    ),
    format = "latex",
    booktabs = TRUE,
    escape = FALSE,
    align = c('l', 'c'),
    longtable = FALSE
  ) |>
  kable_styling(
    latex_options = c("HOLD_position", "striped", "repeat_header"),
    stripe_color = "gray!10",
    font_size = 12
  ) |>
  column_spec(1, width = "8cm") |>
  column_spec(2, width = "4cm") |>
  footnote(
    general = "Fonte: Comissão de Autovaliação.",
    general_title = "",
    threeparttable = TRUE
  )
```

A meta-avaliação representou uma etapa de grande aprendizagem para a 
Comissão de Autoavaliação neste primeiro ciclo avaliativo do Programa de 
Pós-Graduação em Administração do IFMG - Campus Formiga. Ao refletir 
criticamente sobre os métodos utilizados, a Comissão de Autoavaliação 
empenhou-se em promover melhorias contínuas no processo avaliativo, com o 
objetivo de que ele contribua de forma efetiva para a evolução do programa.





# Considerações Finais {#sec-consideracoesfinais}

O Relatório Integral de Autoavaliação do Mestrado Profissional em 
Administração do IFMG - Campus Formiga, referente ao quadriênio 2021-2024, 
demonstra o compromisso institucional com a construção de uma cultura 
avaliativa focada na melhoria contínua do programa, fundamentada em 
evidências e desenvolvida de forma coletiva.

Criado em um período desafiador, marcado pela pandemia da COVID-19, o 
programa buscou consolidar suas bases acadêmicas e administrativas, superando 
adversidades e garantindo a continuidade das atividades acadêmicas do curso. 
O perfil dos discentes mostra que a maioria está em uma fase profissional 
madura, com idade mediana de 35,5 anos, e 92% exercem atividades remuneradas.
Isso reforça o caráter profissional do mestrado e a necessidade de alinhar o 
programa às demandas do mercado e da sociedade. As principais ocupações dos 
participantes incluem administradores, contadores, servidores públicos e 
professores, evidenciando a diversidade de atuações profissionais e a 
aplicabilidade dos conhecimentos em diferentes setores.

Além do perfil dos discentes, a análise do número de ingressantes e das 
taxas de conclusão ao longo do quadriênio 2021-2024 revelou uma queda no 
número de ingressantes, de 11 em 2021 para 7 em 2022 (lembrando que o número 
máximo de vagas ofertadas é 16), e uma redução na taxa de conclusão, de 
82% em 2021 para 57% em 2022. Esses números refletem a tendência nacional d
e diminuição do interesse por programas de pós-graduação, conforme 
apontado por @castro2024 e @crise2024.

A análise da produção intelectual dos concluintes, realizada em conformidade 
com a Política de Autoavaliação do curso, destacou a relevância das pesquisas 
desenvolvidas, com destaque para a criação de soluções técnicas inovadoras, 
como o *Sistema de Tributação Inteligente*, e a publicação de artigos em 
periódicos de alto impacto, como a *Finance Research Letters*. Esses 
resultados demonstram o alinhamento do programa com os objetivos de 
formação de profissionais qualificados para práticas avançadas e 
inovadoras, capazes de atender às demandas sociais, econômicas e 
organizacionais.

Além do cenário desafiador da pós-graduação *stricto sensu* no país, outro 
fator relevante a ser considerado no planejamento da consolidação e evolução 
do curso são as mudanças disruptivas no mundo do trabalho, impulsionadas 
por avanços tecnológicos como a Inteligência Artificial. Esse cenário exige 
que o programa se adapte rapidamente para manter sua relevância e 
atratividade. Diante desses desafios, a autoavaliação contínua se torna 
fundamental para a sustentabilidade do curso, permitindo que o programa 
identifique oportunidades de melhoria e se adapte às demandas do mercado 
e às expectativas dos discentes.

Por meio de um processo avaliativo estruturado e alinhado à Política de 
Autoavaliação formalizada pela Portaria Nº 1706/IFMG/2024, o relatório 
apresenta um panorama abrangente das dimensões bem avaliadas, desafios 
enfrentados e direções estratégicas para o aprimoramento do curso. Desde 
sua criação em 2021, o programa destacou-se pelo alto nível de qualificação 
do corpo docente, pela adequação da matriz curricular, da infraestrutura e 
da gestão acadêmica, conforme evidenciado nos resultados apresentados. A 
estrutura avaliativa utilizada mostrou-se abrangente e eficiente na 
captação de percepções sobre ensino, pesquisa, infraestrutura e gestão 
administrativa.

No entanto, o processo de autoavaliação identificou oportunidades de 
aprimoramento, especialmente na revisão da matriz curricular — um aspecto 
esperado para um programa recente que passará por sua primeira avaliação 
quadrienal. Também foram apontadas demandas estratégicas para o 
aperfeiçoamento da infraestrutura, a ampliação das atividades 
extracurriculares, o fortalecimento da internacionalização e o aumento da 
prospecção de oportunidades de pesquisa e interação com o setor produtivo. 
Além disso, identificaram-se oportunidades para aprimorar a comunicação 
institucional.

Foram identificadas demandas estratégicas (conforme detalhado na @sec-demandadas) 
para os próximos ciclos avaliativos, com foco na reestruturação curricular, 
no aperfeiçoamento da infraestrutura, na promoção de incentivos à pesquisa 
e na expansão das atividades extracurriculares, entre outras. A 
implementação dessas ações será monitorada pela Comissão de Autoavaliação, 
visando contribuir para o fortalecimento do programa e a evolução da 
formação oferecida.

Este relatório reforça a relevância do processo avaliativo como instrumento 
de gestão e aprimoramento contínuo, permitindo que o programa se adapte às 
demandas institucionais e de mercado. A reflexão crítica proporcionada pela 
autoavaliação pode orientar o planejamento estratégico do curso e fortalecer 
sua capacidade de formar profissionais qualificados para enfrentar os 
desafios contemporâneos, ampliando sua contribuição para o desenvolvimento 
local e regional.

Além das dimensões bem avaliadas e desafios identificados, a Comissão de 
Autoavaliação realizou uma Meta-Avaliação do processo, revisando 
criticamente os instrumentos e métodos aplicados. Esse aprendizado 
resultou em recomendações para tornar os próximos ciclos avaliativos 
mais eficazes e alinhados às necessidades e ao novo nível de maturidade 
do programa.




# Referências {.unnumbered}

::: {#refs}
:::




